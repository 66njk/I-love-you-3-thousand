<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一个 Jerry 的日记</title>
      <link href="2021/03/10/A-Diary-Of-Jerry/"/>
      <url>2021/03/10/A-Diary-Of-Jerry/</url>
      
        <content type="html"><![CDATA[<h1 id="【一个-Jerry-的日记】"><a href="#【一个-Jerry-的日记】" class="headerlink" title="【一个 Jerry 的日记】"></a>【一个 Jerry 的日记】</h1>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 生活 </category>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 工作 </tag>
            
            <tag> 思考 </tag>
            
            <tag> 生命 </tag>
            
            <tag> 梦想 </tag>
            
            <tag> 现实 </tag>
            
            <tag> 爱情 </tag>
            
            <tag> 温度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《JERRY Linux-小抄》</title>
      <link href="2021/03/09/JERRY-Linux-Cheat-Sheet/"/>
      <url>2021/03/09/JERRY-Linux-Cheat-Sheet/</url>
      
        <content type="html"><![CDATA[<h1 id="《JERRY-Linux-小抄》"><a href="#《JERRY-Linux-小抄》" class="headerlink" title="《JERRY Linux-小抄》"></a>《JERRY Linux-小抄》</h1><blockquote><p>原创内容，转载请注明出处！</p></blockquote><blockquote><p>说明：以下内容基于 VMware 16 Player &amp; Ubuntu 20.04.2.0 LTS 环境</p></blockquote><h1 id="一、认识-Linux"><a href="#一、认识-Linux" class="headerlink" title="一、认识 Linux"></a>一、认识 Linux</h1><h2 id="1-1-1-Linux-的由来"><a href="#1-1-1-Linux-的由来" class="headerlink" title="1.1.1 Linux 的由来"></a>1.1.1 Linux 的由来</h2><h2 id="1-1-2-Linux-的内核"><a href="#1-1-2-Linux-的内核" class="headerlink" title="1.1.2 Linux 的内核"></a>1.1.2 Linux 的内核</h2><h2 id="1-1-3-Linux-的特点"><a href="#1-1-3-Linux-的特点" class="headerlink" title="1.1.3 Linux 的特点"></a>1.1.3 Linux 的特点</h2><h2 id="1-1-4-Linux-的用途"><a href="#1-1-4-Linux-的用途" class="headerlink" title="1.1.4 Linux 的用途"></a>1.1.4 Linux 的用途</h2><h2 id="1-2-1-Ubuntu-简介"><a href="#1-2-1-Ubuntu-简介" class="headerlink" title="1.2.1 Ubuntu 简介"></a>1.2.1 Ubuntu 简介</h2><h2 id="1-3-1-Linux-系统结构"><a href="#1-3-1-Linux-系统结构" class="headerlink" title="1.3.1 Linux 系统结构"></a>1.3.1 Linux 系统结构</h2><h2 id="1-4-1-Linux-文件结构"><a href="#1-4-1-Linux-文件结构" class="headerlink" title="1.4.1 Linux 文件结构"></a>1.4.1 Linux 文件结构</h2><h2 id="1-5-1-说明"><a href="#1-5-1-说明" class="headerlink" title="1.5.1 说明"></a>1.5.1 说明</h2>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> vi/vim </tag>
            
            <tag> Shell </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《JERRY 算法小抄》</title>
      <link href="2021/03/07/JERRY-Algorithm-Cheat-Sheet/"/>
      <url>2021/03/07/JERRY-Algorithm-Cheat-Sheet/</url>
      
        <content type="html"><![CDATA[<h1 id="《JERRY-算法小抄》"><a href="#《JERRY-算法小抄》" class="headerlink" title="《JERRY 算法小抄》"></a>《JERRY 算法小抄》</h1><blockquote><p>原创内容，转载请注明出处！</p></blockquote><h1 id="【输出任意整数的绝对值】"><a href="#【输出任意整数的绝对值】" class="headerlink" title="【输出任意整数的绝对值】"></a>【输出任意整数的绝对值】</h1><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter num: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">0</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num * <span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="【输出任意正整数的位数】"><a href="#【输出任意正整数的位数】" class="headerlink" title="【输出任意正整数的位数】"></a>【输出任意正整数的位数】</h1><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter num: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; num &gt;= <span class="number">1</span>; n++) {</span><br><span class="line">        num = num / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num is %d digits.\n"</span>, n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="【输出任意正整数的每一位值】"><a href="#【输出任意正整数的每一位值】" class="headerlink" title="【输出任意正整数的每一位值】"></a>【输出任意正整数的每一位值】</h1><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本1：逆序输出各位数字（从低位到高位）</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> num, temp;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter num: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    <span class="comment">// 将 num 赋值给临时变量 temp</span></span><br><span class="line">    temp = num;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; temp &gt;= <span class="number">1</span>; n++) {</span><br><span class="line">        temp = temp / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出正整数的位数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num is %d digits.\n"</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 逆序输出各位数字（从低位到高位）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The reverse order output is: "</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = n; i &gt; <span class="number">0</span>; i--) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, num % <span class="number">10</span>);</span><br><span class="line">        num = num / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本2：正序输出各位数字（从高位到低位）</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> num, temp;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter num: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    <span class="comment">// 将 num 赋值给临时变量 temp</span></span><br><span class="line">    temp = num;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">0</span>; temp &gt;= <span class="number">1</span>; n++) {</span><br><span class="line">        temp = temp / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出正整数的位数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num is %d digits.\n"</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---------------------------------</span></span><br><span class="line">   </span><br><span class="line">    <span class="comment">// 定义一个 n 个空间的一维动态数组</span></span><br><span class="line">    <span class="keyword">int</span> arrLen = n;<span class="comment">// 数组长度</span></span><br><span class="line">    <span class="keyword">int</span> *<span class="built_in">array</span>;<span class="comment">// 数组指针</span></span><br><span class="line">    <span class="keyword">int</span> i;<span class="comment">// 数组下标</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态分配内存空间，如果失败就退出程序</span></span><br><span class="line">    <span class="built_in">array</span> = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(arrLen * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">array</span>) {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Error: Failed to create array!\n"</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 向内存中写入数据</span></span><br><span class="line">    <span class="keyword">for</span> (i = arrLen - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--){</span><br><span class="line">    <span class="built_in">array</span>[i] = num % <span class="number">10</span>;</span><br><span class="line">        num = num / <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 正序输出各位数字（从高位到低位）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The Positive order output is: "</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环输出数组元素</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arrLen; i++){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d  "</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 及时释放内存空间防止内存泄漏</span></span><br><span class="line">    <span class="built_in">free</span>(<span class="built_in">array</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本3 正序输出各位数字（从高位到低位）</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getDigits</span><span class="params">(<span class="keyword">int</span> num)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printResult</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> num;<span class="comment">// 待处理值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Please enter a num:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">// num 的位数</span></span><br><span class="line"></span><br><span class="line">n = getDigits(num);<span class="comment">// 获取 num 的位数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"num is %d digits.\n"</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正序输出各位数字（从高位到低位）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The Positive order output is: "</span>);</span><br><span class="line"></span><br><span class="line">printResult(num, n);<span class="comment">// 输出最终结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}<span class="comment">// main</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getDigits</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; num &gt;= <span class="number">10</span>; ++i) {</span><br><span class="line">num /= <span class="number">10</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">}<span class="comment">// getDigits</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printResult</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (a = <span class="number">0</span> ; n &gt;= <span class="number">1</span>; n--) {</span><br><span class="line">a = <span class="built_in">pow</span>(<span class="number">10</span>, n - <span class="number">1</span>);<span class="comment">// pow 求次方数, pow(a, x): a 的 x 次方值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, (num / a) % <span class="number">10</span>);</span><br><span class="line">}<span class="comment">// for </span></span><br><span class="line"></span><br><span class="line">}<span class="comment">// printResult</span></span><br></pre></td></tr></tbody></table></figure><h1 id="【输出任意实数的整数及小数部分】"><a href="#【输出任意实数的整数及小数部分】" class="headerlink" title="【输出任意实数的整数及小数部分】"></a>【输出任意实数的整数及小数部分】</h1><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">double</span> num;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter num: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;num);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> num_integer = (<span class="keyword">int</span>)num;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">double</span> num_decimal = num - (<span class="keyword">double</span>)num_integer;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Integer is %d, Decimal is %lf\n"</span>, num_integer, num_decimal);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 基本常用算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Head First Java》—— 读书笔记</title>
      <link href="2021/02/24/Head-First-Java-Reading-Notes/"/>
      <url>2021/02/24/Head-First-Java-Reading-Notes/</url>
      
        <content type="html"><![CDATA[<h1 id="《Head-First-Java》——-读书笔记"><a href="#《Head-First-Java》——-读书笔记" class="headerlink" title="《Head First Java》—— 读书笔记"></a>《Head First Java》—— 读书笔记</h1><blockquote><p>原创内容，学习不易，转载请注明出处，感谢！<br>感谢 《Head First Java》!</p></blockquote><h1 id="前言：学习需求"><a href="#前言：学习需求" class="headerlink" title="前言：学习需求"></a>前言：学习需求</h1><h2 id="一、所需工具"><a href="#一、所需工具" class="headerlink" title="一、所需工具"></a>一、所需工具</h2><ul><li>一个文本编辑器（目前不推荐使用 <code>IDE</code> “集成开发环境”，推荐 <code>Sublime Test</code> 或 <code>VSCode</code>）</li><li>一个终端命令行（使用命令列有利于真正地理解内部运作）</li><li>一个浏览器（推荐 <code>Chrome</code> 不要问为什么）</li><li>一个音乐播放器（不关书的事，是老子推荐的！）</li><li>JDK API 文档（非常重要！！！）</li></ul><h2 id="二、Java-的安装与配置"><a href="#二、Java-的安装与配置" class="headerlink" title="二、Java 的安装与配置"></a>二、Java 的安装与配置</h2><ol><li>需要 <code>1.5</code> 版本以上的 <code>Java SDK</code> 即：<code>JDK</code> （推荐 <code>1.8</code> 版本不要问为什么），请从 <a href="https://www.oracle.com/cn/index.html">Oracle 官网</a> 获取。（Java 原本属于 Sun 公司，后来被 Oracle 收购）</li><li>找到 <code>jdk/bin</code> 目录，并将其 <code>绝对路径</code> 添加到 <code>PATH</code> 系统环境变量中。原因是：该目录下存放有 <code>javac.exe</code> <code>java.exe</code> 及其他重要工具，放到 PATH 中后，在终端输入 <code>javac</code> <code>java</code> 等指令时，系统便会知道要去哪里找到并运行对应的工具。</li></ol><h2 id="三、说明"><a href="#三、说明" class="headerlink" title="三、说明"></a>三、说明</h2><ul><li>书中的首要目标是让读者学习 Java 的基本概念，然后才是开发 Java 过程的组织与管理动作的细节，这些细节在真实环境中非常重要，所以我们会很深入地讨论，但是组织管理细节被安排在后面的章节中。</li><li>本书的主要内容较为基础，距离实际的开发还有很大的距离，博主在归纳本书的内容时会省略一些基本的概念及原理的介绍，有关 Java 基本语法的内容请参考我另外的文章，此篇的主要目的在于归纳《Head First Java》中所出现的一些非基础语法概念，同时在阅读《Head First Java》后推荐您阅读《Java 核心技术 卷1》及《Java 编程思想》这两本 Java 圣经，有空的话请再阅读下《Head First 设计模式》不要问为什么……</li></ul><h1 id="第一章：进入-Java-的世界——基本概念"><a href="#第一章：进入-Java-的世界——基本概念" class="headerlink" title="第一章：进入 Java 的世界——基本概念"></a>第一章：进入 Java 的世界——基本概念</h1><h2 id="一、Java-的工作方式"><a href="#一、Java-的工作方式" class="headerlink" title="一、Java 的工作方式"></a>一、Java 的工作方式</h2><h3 id="1-1-基本步骤"><a href="#1-1-基本步骤" class="headerlink" title="1.1 基本步骤"></a>1.1 基本步骤</h3><ol><li><p>编写 <code>.java</code> 源代码。</p></li><li><p>执行 <code>javac</code> 命令 运行 <code>javac.exe</code> Java 编译器 对 <code>.java</code> 源文件进行编译 并生成同名 <code>.class</code> 字节码文件。 </p></li><li><p>执行 <code>java</code> 命令 运行 <code>java.exe</code> Java 解释器 启动 <code>JVM</code> Java 虚拟机 来运行 <code>.class</code> 文件，JVM 会将字节码文件转换成当前平台能够理解的形式来运行，这也是 Java 语言跨平台特性的基础。</p></li></ol><h3 id="1-2-案例"><a href="#1-2-案例" class="headerlink" title="1.2 案例"></a>1.2 案例</h3><ol><li>编写 <code>Hello.java</code> 源代码</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>终端当前路径下执行 <code>javac</code> 命令</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ javac Hello.java</span><br><span class="line"><span class="comment">#（若执行成功，则会在当前目录下生成一个 Hello.class 文件）</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>终端当前路径下执行 <code>java</code> 命令</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ java Hello</span><br><span class="line"><span class="comment">#（若执行成功，则会在终端窗口打印 Hello World!）</span></span><br></pre></td></tr></tbody></table></figure><h2 id="二、Java-简史"><a href="#二、Java-简史" class="headerlink" title="二、Java 简史"></a>二、Java 简史</h2><p>（1）Java 1.02</p><ul><li>250 个类</li><li>龟速</li><li>bug 较多</li><li>applet 是重点</li></ul><p>（2）Java 1.1</p><ul><li>500 个类</li><li>狗速</li><li>开始受到欢迎</li><li>适合于开发图形界面</li></ul><p>（3）Java 2（版本 1.2 ~ 1.4）</p><ul><li>2300 个类</li><li>马速</li><li>企业级开发</li><li>移动应用开发</li><li>三种版本 ME（微型、移动）、SE（桌面、标准）、EE（企业、Web）</li></ul><p>（4）Java 5.0（版本 1.5 及以上）</p><ul><li>3500个类</li><li>飞速</li><li>重大更新</li><li>易用</li><li>安全</li></ul><p>（5）Java 5.0 以上</p><ul><li>性能不断强大</li><li>类库不断丰富</li><li>安全不断提高</li><li>生态不断完善</li></ul><h2 id="三、Java-的程序结构"><a href="#三、Java-的程序结构" class="headerlink" title="三、Java 的程序结构"></a>三、Java 的程序结构</h2><h3 id="3-1-基本结构"><a href="#3-1-基本结构" class="headerlink" title="3.1 基本结构"></a>3.1 基本结构</h3><ul><li>类存放于源文件里面</li><li>方法存放于类中</li><li>语句存放于方法中</li></ul><h3 id="3-2-什么是源文件？"><a href="#3-2-什么是源文件？" class="headerlink" title="3.2 什么是源文件？"></a>3.2 什么是源文件？</h3><ul><li>扩展名为 <code>.java</code></li><li>带有类的定义</li><li>一个源文件必须至少有一个类（即：主类）</li><li>主类的名称必须与源文件名相同</li></ul><h3 id="3-3-什么是类？"><a href="#3-3-什么是类？" class="headerlink" title="3.3 什么是类？"></a>3.3 什么是类？</h3><ul><li>带有一个或多个方法</li><li>方法必须在类的内部声明</li></ul><h3 id="3-4-什么是方法？"><a href="#3-4-什么是方法？" class="headerlink" title="3.4 什么是方法？"></a>3.4 什么是方法？</h3><ul><li>在方法的花括号中编写方法应该执行的指令</li><li>方法代码是由一组语句所组成的（函数或方法）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 读书笔记 </tag>
            
            <tag> 《Head First Java》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《复兴时代：计算机技术+》我眼中的图形化编程艺术</title>
      <link href="2021/02/06/JERRY-The-art-of-graphical-programming-in-my-eyes/"/>
      <url>2021/02/06/JERRY-The-art-of-graphical-programming-in-my-eyes/</url>
      
        <content type="html"><![CDATA[<h1 id="【我眼中的图形化编程艺术】"><a href="#【我眼中的图形化编程艺术】" class="headerlink" title="【我眼中的图形化编程艺术】"></a>【我眼中的图形化编程艺术】</h1><blockquote><p>该文是我大一学期时投稿在《复兴时代：计算机技术+》中的一篇文章，其所有内容包括图片均为原创，转载请注明出处！</p></blockquote><p>说真的，时间过得真快！突然想起半年多前，当时的我对计算机技术充满了无限的好奇，而如今我已经学习计算机专业知识半年多了。这个过程中有哭也有笑，某时甚至会感动！不过假如让我谈一谈这段学习过程中最难忘的瞬间，那我想一定是：成功打印 <code>Hello World!</code> 的那一刻！和第一次打开 <code>Scratch</code> 的那一瞬间！说到这，我相信不少读者就有疑问了”啊，<code>Scratch</code> 是什么？“哈哈！没听说过 <code>Scratch</code> 很正常，不然我也就没写这篇文章的必要了，下面请听我娓娓道来……</p><p><code>Scratch</code> 全称：“简易图形化编程语言”，是由麻省理工学院的“终身幼儿园”团队开发的图形化编程工具，目前主要的服务群体是青少年，同时也是少儿编程行业的主流编程语言，直到今天已更新到 <code>3.0</code> 版本。废话不多说，先来看张图吧！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223943480.jpg"> </p><p>上图所展示的就是 <code>Scratch</code> 的初始界面，怎么样？是不是突然有点意外，这和开发人员常用的程序开发软件区别太大了吧！哈哈！别急，好戏还在后头，让你看看 <code>Scratch</code> 可以干什么。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223943268.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223941928.jpg"> </p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223942811.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223945320.jpg"> </p><p>看到这，我想你的第一念头应该是“ <code>Scratch</code> 是一个用于制作小游戏的开发软件。”哈哈！其实我刚开始接触 <code>Scratch</code> 时也这么认为，不过先别着急下结论啊，你再往下看！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223946791.jpg"> </p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223941693.jpg"> </p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223946519.jpg"> </p><p>哈哈！怎么样？有被惊讶到吧？无论是二维码识别，还是利用 <code>AI</code> 感知年龄（其实本人才19并没有22岁，可能是长的着急了哈哈！）、情绪、脸型，或是利用 <code>AR</code> 虚拟交互设计一款依靠手势便可以控制飞船移动的小游戏，通通可以在 <code>Scratch</code> 上实现。看到这，你肯定在想“这 <code>Scratch</code> 也太神奇了吧！它是怎么做到的？它到底是什么？”哈哈！好奇就对了，我也就有继续说下去的动力了！接下来让我们真正开始了解 <code>Scratch</code> 吧！</p><p>其实无论是小游戏也好，还是 <code>AI</code> 人工智能、<code>AR</code> 虚拟交互也好，假如利用我们主流的高级编程语言纯靠个人的能力来实现其实是比较困难的，毕竟且先不考虑算法设计、代码如何编写、结构如何搭建，就说用户交互界面的设计恐怕也要难倒大部分学习编程的同学，而 <code>Scratch</code> 就完美的解决了这些问题。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223946221.jpg"> </p><p>如图所示：<code>Scratch</code> 从左到右主要由：代码区、造型区、声音区、脚本区、舞台区、角色区、背景区构成。</p><p>代码区提供了控制一切东西的代码模块，其使用方式类似于“搭积木”，但是其基本程序结构和高级编程语言是一致的，比如：顺序、循环、分支……，而且，基本的编程思维也与高级语言同出一辙，像：模块化思想、代码的封装、面向过程、面向对象思想在这里都有体现。</p><p>造型区及声音区的主要功能是为创作者提供角色、背景及声音的创作平台，当然 <code>Scratch</code> 本身也是提供许多默认的角色、背景、声音可供选择。</p><p>脚本区通俗理解就是代码“堆叠”的场所，为程序创作提供代码编写的区域。</p><p>舞台区则是实时展示程序结果的窗口，在这里创作者可以实时预览每条代码、每个模块、每个对象的执行效果。</p><p>而角色区及背景区则是对舞台内所有角色和背景的管理和控制。</p><p><code>Scratch</code> 的基本部分介绍完了，此时也许部分读者会有疑惑了，这看上去不过是将高级编程语言的语句代码变为图形代码啊，的确可以简化小游戏的制作，可怎么就能轻松实现 <code>AI</code> 人工智能，<code>AR</code> 虚拟交互技术了呢？</p><p>其实，<code>AI</code> 与 <code>AR</code> 只不过是 <code>Scratch</code> 的一部分，除了这些，<code>Scratch</code> 还可以：玩爬虫、控制外部硬件（如：机器人编程）、数学计算、物理计算、大数据处理、数据库管理……甚至我还见过一个大神利用 <code>Scratch</code> 弄了一个简单的操作系统！可以说几乎你能想到的应用场景它都可以胜任并且还较为简单！但至于“它是如何做到的？”有关这类问题的回答，我想我还是延续老方法先来看几张图吧。</p><p>  <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2021020622394561.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223944941.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223945275.jpg"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2021020622394599.jpg"></p><p>上面几幅图中一大堆东西是啥？其实，这便是 <code>Scratch</code> 中最具特点的东西！在 <code>Scratch</code> 的代码区中，除了自带的代码外，还提供了许许多多具有特殊功能的模块可供下载使用，这就类似于程序开发中面向对象的概念，它提供了具体的操作工具，至于这些工具是如何设计出来的并不需要创作者去思考，这大大节约了创作的难度，同时有利于创作者把重心放在具体的某些创意上，而不是纠结到底如何设计出一个好的算法。</p><p>而且最重要的是，<code>Scratch</code> 搭建了一个生态，这是一个巨大的全球化网络创作分享平台，在那里有全世界的创作者分享他们的作品，也包括哪些功能特殊的模块，这直接导致 <code>Scratch</code> 的创作交流学习资源空前巨大。创造者可以通过平台交流、学习和合作实现一些原本不可思议的作品，就比如上面提到的操作系统。再者：<code>Scratch 3.0</code> 更是实现了 <code>PC</code> 端与移动端的完美兼容，这空前的打开了 <code>Scratch</code> 的应用场景，作品可以同时适配你的手机和电脑。</p><p>听到这，是不是很开心？平日里学了半天程序开发最终也没弄个像样的东西出来，毕竟用高级编程语言来开发的确需要一定的专业水平，但是假如你利用<code>Scratch</code> 的话也许你早就解决了！哈哈！开心归开心，但是还有一个问题不容我们忽视！讲了这么多，你是否发现，好像 <code>Scratch</code> 把难搞的东西都简化了，对于创作者来说的确是件好事情，但是对于学习程序开发的同学来说似乎并不是一件好事。为什么这么说？因为，正是由于 <code>Scratch</code> 的简单，所以真正专业的程序开发知识在 <code>Scratch</code> 上学不到，而且就算是只用 <code>Scratch</code> 来进行创作，很多时候代码模块远远不能满足自己的需求，须要自己设计开发出一个模块来供自己使用，这时说到底还是要依靠高级语言，比如 <code>Scratch</code> 中的代码模块其实背后大部分是用 <code>Python</code> 语言编写实现的，也就是说，<code>Scratch</code> 中无论 <code>AI</code> 还是 <code>AR</code> 还是其他奇特的功能其背后就是倚仗 <code>Python</code> 这个“老大哥”！那么问题来了，<code>Scratch</code> 真的就只是一个“美丽的花瓶”吗？真的就不适合用来学习程序开发吗？真的就不能成为主流编程语言吗？其实，我也被这些问题困惑很久，对于 <code>Scratch</code> 是否可以用来学习程序开发，我个人认为是可以的，因为 <code>Scratch</code> 的代码在底层是大部分利用 <code>Python</code> 实现的，那“如何结合 <code>Scratch</code> 与 <code>Python</code> 的关系？”便是最主要的问题。答案其实很简单，那就是一起显示出来呗！这样在利用 <code>Scratch</code> 的同时也学习了 <code>Python</code>，关键的是在一些比较难实现的模块例如 <code>AI</code>、<code>AR</code>，借助 <code>Scratch</code> 可以更好的理解 <code>Python</code> 是如何实现的，这不是一举两得吗？而就在前段时间，当我利用海龟编辑器（一个基于 <code>Scratch</code>的开发软件）再一次成功打印 <code>Hello World!</code> 时，当初的那种激动与热泪盈眶，又回来了！我看见了一段有灵魂也有肉体的代码……</p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210206223943643.jpg"> </p><p>最后回答那个问题“ <code>Scratch</code> 是不是终究成为不了主流的编程语言？”说实话，至少目前看，可能性极小！但我知道一点，无论 <code>Scratch</code> 是否能接受住时间的考验，无论图形化编程方向最终成功的是否是 <code>Scratch</code>。图形化编程一定是一种特别的艺术！图形化编程思想也必将成为一种趋势！自从世界上第一台通用计算机“ <code>ENIAC</code> ”于1946年在美国宾夕法尼亚大学诞生以来，直到今天互联网发展日新月异，但在时代的浪潮之中，唯有“创造”一词从来都是最耀眼的！而受制于计算机技术的专业性，无论是：社交平台、移动支付、网络购物、无人驾驶、共享经济……这类事物的创造都需要倚仗很高的专业知识背景，它们很美！可它们却只能在金字塔顶尖才能诞生！这不禁让我感到惋惜！设想一下，假如未来某一天程序开发可以像今天的短视频创作那样形成一个全民创作的浪潮！到那时，世界该是什么样的？我想，这或许就是图形化编程的使命吧！但无论如何，我只希望那一天早点到来！</p><p> 2020年4月28日</p>]]></content>
      
      
      <categories>
          
          <category> 图形化编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图形化编程 </tag>
            
            <tag> 可视化编程 </tag>
            
            <tag> 少儿编程 </tag>
            
            <tag> Scratch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础注意事项归纳——Java小抄(10)</title>
      <link href="2021/01/08/Java-Supplement-10/"/>
      <url>2021/01/08/Java-Supplement-10/</url>
      
        <content type="html"><![CDATA[<h1 id="【Java基础注意事项归纳——Java小抄-10-】"><a href="#【Java基础注意事项归纳——Java小抄-10-】" class="headerlink" title="【Java基础注意事项归纳——Java小抄(10)】"></a>【Java基础注意事项归纳——Java小抄(10)】</h1><blockquote><p>原创内容，转载请注明出处！</p></blockquote><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>Java 中继承了 C 系语言的格式化输出函数，<code>printf</code> 使用方式与 C 系语言一样，但不建议在 Java 中使用这种输出方式！</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p>javac 编译器可以指定用何种方式编译 java 程序，指定方式为：<code>javac -encoding UTF-8 Test.java</code></p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p>牢记 A 的 ASCII 为：65，a 的 ASCII 为：97</p><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><p>两数求余数，注意符号（符号与前者相同）例如：<code>-5 % -2    //-1</code></p><h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><p>Java 中可在数字之间使用下划线，以提高可读性</p><p>例如：</p><p><code>int x1 = 1_969;</code></p><p><code>double d1 = 1_969.09_19;</code></p><p>注意：下划线只能在两个数字之间</p><ul><li>不能在开头与结尾</li><li>不能在前缀或者后缀的内部或前后：<code>0x_7B1</code>、<code>1969_L</code>，八进制除外</li><li>不能在小数点前后</li></ul><h1 id="6"><a href="#6" class="headerlink" title="6"></a>6</h1><p>Java 中是可以连续赋值的</p><p><code>num1 = num2 = num3 = 24;</code></p><p>注意：此时的赋值顺序是：从右到左</p><h1 id="7"><a href="#7" class="headerlink" title="7"></a>7</h1><p>对赋值号的深入理解：</p><p><code>a = 10;</code></p><ul><li>1、将 10 赋值给 a 变量</li><li>2、 <code>a = 10;</code> 是一个表达式，该式会产生一个结果 = 左值（即：a = 10; 的结果就是 10)</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(a = <span class="number">10</span>);<span class="comment">//10</span></span><br><span class="line">System.out.println(<span class="number">10</span> + (a = <span class="number">30</span>));<span class="comment">//40</span></span><br><span class="line">System.out.println(a = b = <span class="number">10</span>);<span class="comment">//10</span></span><br><span class="line">System.out.println((a = <span class="number">10</span>) + (b = <span class="number">20</span>));<span class="comment">//30</span></span><br></pre></td></tr></tbody></table></figure><h1 id="8"><a href="#8" class="headerlink" title="8"></a>8</h1><p>在 Java 中：</p><p><code>整数 / 0</code> ：报错</p><p><code>浮点数 / 0</code> ：无穷大（Infinity）</p><h1 id="9"><a href="#9" class="headerlink" title="9"></a>9</h1><p>浮点型数据比较规则：</p><ul><li>0.0 与 -0.0 是相等的</li><li>浮点型与整数型只要值相等时，则也是相等的</li><li>正无穷与正无穷相等</li><li>NaN 与任何数都不相等，包括 NaN（NaN 不是一个数字，例如：一个正整数除以 0 的结果为：正无穷大；浮点数 / 0 、负数的平方根 结果为：NaN）</li></ul><h1 id="10"><a href="#10" class="headerlink" title="10"></a>10</h1><p><code>&amp;&amp;</code> 和 <code>||</code> 是短路运算符，即：一个表达式得结果，后一个表达式就不用运算了</p><p><code>&amp;</code> 和 <code>|</code> 是非短路运算符，即：一个表达式得结果，后一个表达式也要运算</p><h1 id="11"><a href="#11" class="headerlink" title="11"></a>11</h1><p>三元运算符：</p><p><code>boolean表达式? 表达式1: 表达式2;</code></p><p>若 boolean 为真，结果为表达式1，否则为表达式2</p><p>注意：</p><ul><li>必须为表达式！例如：System.out.println(); 这些就不可以！</li><li>三元运算符都可以转化为 if-else，但反之则不一定</li></ul><h1 id="12"><a href="#12" class="headerlink" title="12"></a>12</h1><p>特别注意：</p><p>if-else 语句中是：<code>else if () {}</code>，千万不要误以为是：<code>if else () {}</code></p><h1 id="13"><a href="#13" class="headerlink" title="13"></a>13</h1><h2 id="label-的使用"><a href="#label-的使用" class="headerlink" title="label 的使用"></a><code>label</code> 的使用</h2><p><code>label</code> 是一个标签，可以使用 <code>break</code> 或 <code>continue</code> 使程序跳转到这个标签处执行（执行：<code>break</code> 或 <code>continue</code>），从而改变程序的执行流程</p><p>例如：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">a: <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) {</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) {</span><br><span class="line"><span class="keyword">if</span> (i + j == <span class="number">6</span>) {</span><br><span class="line">System.out.print(<span class="string">"j="</span>);</span><br><span class="line">System.out.print(j);</span><br><span class="line"><span class="keyword">break</span> a;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.print(<span class="string">"i="</span>);</span><br><span class="line">System.out.println(i);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">j=6</span><br></pre></td></tr></tbody></table></figure><h2 id="label-的另类用法："><a href="#label-的另类用法：" class="headerlink" title="label 的另类用法："></a><code>label</code> 的另类用法：</h2><p>（用在循环外）</p><p>案例：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">b: {</span><br><span class="line">System.out.println(<span class="string">"b"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">0</span>) {</span><br><span class="line">System.out.println(<span class="string">"break"</span>);</span><br><span class="line"><span class="keyword">break</span> b;</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"b2"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b</span><br><span class="line">break</span><br></pre></td></tr></tbody></table></figure><p>注意：</p><ul><li>b label 标签内的变量是局部变量，只在 b {} 中有效</li><li>且 break b; 只能出现在 b{} 中，否则会报错</li></ul><h2 id="continue-与-label-的使用只能在循环中！"><a href="#continue-与-label-的使用只能在循环中！" class="headerlink" title="continue 与 label 的使用只能在循环中！"></a><code>continue</code> 与 <code>label</code> 的使用只能在循环中！</h2><p>案例：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">a: <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) {</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) {</span><br><span class="line"><span class="keyword">if</span> (i + j == <span class="number">6</span>) {</span><br><span class="line">System.out.print(<span class="string">"j="</span>);</span><br><span class="line">System.out.println(j);</span><br><span class="line"><span class="keyword">continue</span> a;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.print(<span class="string">"i="</span>);</span><br><span class="line">System.out.println(i);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">j=6</span><br><span class="line">j=5</span><br><span class="line">j=4</span><br><span class="line">j=3</span><br><span class="line">j=2</span><br><span class="line">j=1</span><br><span class="line">j=0</span><br><span class="line">i=7</span><br><span class="line">i=8</span><br><span class="line">i=9</span><br></pre></td></tr></tbody></table></figure><p>注意：在实际开发中，不推荐使用标记跳转！因为其破坏了程序的结构！</p><h1 id="14"><a href="#14" class="headerlink" title="14"></a>14</h1><p>Java 数组</p><h2 id="一、定义："><a href="#一、定义：" class="headerlink" title="一、定义："></a>一、定义：</h2><ul><li>数组是一个变量，存储相同数据类型的一组数据</li><li>声明一个变量就是在内存空间划出一块合适的空间</li><li>声明一个数组就是在内存空间划出一串连续的空间</li></ul><h2 id="二、特点："><a href="#二、特点：" class="headerlink" title="二、特点："></a>二、特点：</h2><ul><li>存放相同数据类型</li><li>内存中连续分配相同大小的空间</li><li>大小一但确定将不可扩容或缩容</li><li>检索元素速度快，而添加和删除元素慢</li><li>使用下标访问元素，下标从0开始</li></ul><h2 id="三、数组的使用"><a href="#三、数组的使用" class="headerlink" title="三、数组的使用"></a>三、数组的使用</h2><p>四步走：</p><ul><li>1、声明数组：<code>int[] a;</code>（常用）,<code>int a[];</code><ul><li>注意：声明数组时不规定数组长度，规定会报错！</li></ul></li><li>2、分配空间：<code>a = new int[5];</code><ul><li>注意：此步骤与上一步可以合并：<code>int [] a = new int[5];</code></li></ul></li><li>3、赋值：<code>a[0] = 24;</code></li><li>4、处理数据：<code>a[0] = a[0] * 10;</code></li></ul><p>关于赋值：</p><ul><li><p>普通赋值：<code>a[0] = 5;</code>，<code>a[1] = 9;</code></p></li><li><p>边声明边赋值：</p><ul><li><p><code>int[] a = {66, 54, 24};</code></p></li><li><p>``int[] a = new int[]{66, 54, 24};`</p><p>注意：此方式<code>[]</code>内不能指定长度！</p></li><li><p><code>int[] a;</code></p><p><code>a = new int[]{66, 54, 24};</code></p><p>注意：不可以直接 <code>a = {66, 54, 24};</code></p></li></ul></li><li><p>动态地从键盘录入赋值：</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) {</span><br><span class="line">            a[i] = scanner.nextInt();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="四、数组的默认值"><a href="#四、数组的默认值" class="headerlink" title="四、数组的默认值"></a>四、数组的默认值</h2><p>在数组中：</p><ul><li>基本数据类型默认值为：<code>0</code>、<code>0.0</code>、<code>a</code>、<code>false</code> 等</li><li>引用数据类型默认值为：<code>null</code></li></ul><p>注意：数组之所以会有默认值，是因为系统会自动为堆里的任何东西自动先赋一个处值！</p><h2 id="五、使用循环遍历数组"><a href="#五、使用循环遍历数组" class="headerlink" title="五、使用循环遍历数组"></a>五、使用循环遍历数组</h2><p>使用数组的属性 <code>length</code> 控制循环的次数</p><p>方法：</p><p>1、使用 for 循环</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; scores.length; i++) {</span><br><span class="line">    System.out.println(scores[i]);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>2、使用 foreach 循环</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> score: scores) {</span><br><span class="line">    System.out.println(score);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// score 为一个临时变量，保存每一个 scores 遍历时的值</span></span><br><span class="line"><span class="comment">// 对于单纯的遍历数组而言推荐使用 foreach 循环</span></span><br></pre></td></tr></tbody></table></figure><h2 id="六、二维数组"><a href="#六、二维数组" class="headerlink" title="六、二维数组"></a>六、二维数组</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] nums1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> nums2[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span>[][] nums3 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][];</span><br><span class="line"><span class="keyword">int</span>[][] nums4 = {{<span class="number">1</span>, <span class="number">2</span>}, {<span class="number">3</span>, <span class="number">4</span>}, {<span class="number">5</span>, <span class="number">6</span>}};</span><br><span class="line"><span class="keyword">int</span>[][] nums5 = <span class="keyword">new</span> <span class="keyword">int</span>[][]{{<span class="number">1</span>, <span class="number">2</span>}, {<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>}};</span><br><span class="line"><span class="keyword">int</span> nums6[][];</span><br><span class="line"><span class="keyword">int</span>[] nums7[];</span><br></pre></td></tr></tbody></table></figure><p>注意：在 Java 中二维数组可以不写列数，但是一定要指明行数！但是在 C 系语言中则相反，这是因为两种语言的数组结构在底层的存储方式不同导致的！</p><h1 id="15"><a href="#15" class="headerlink" title="15"></a>15</h1><p>Java 中数组内存管理的说明</p><p>数组既可以存储基本数据类型，也可以存储引用数据类型</p><h2 id="一、数组的定义格式："><a href="#一、数组的定义格式：" class="headerlink" title="一、数组的定义格式："></a>一、数组的定义格式：</h2><ul><li>格式1：<code>数据类型[] 数组名;</code> （推荐）</li><li>格式2：<code>数据类型 数组名[];</code></li><li>注意：定义做完后，数组中是没有元素值的</li></ul><h2 id="二、数组的初始化："><a href="#二、数组的初始化：" class="headerlink" title="二、数组的初始化："></a>二、数组的初始化：</h2><ul><li>数组初始化概述：</li></ul><p>Java 中的数组必须先初始化，然后才能使用！</p><p>例如：<code>int[] a = new int[];        //报错</code></p><p>所谓初始化：就是为数组中的数组元素分配内存空间，并为每个数组元素赋值</p><ul><li>数组的初始化方式：</li></ul><p>1、动态初始化：初始化时只指定数组长度，由系统为数组分配初始值</p><ul><li>格式：</li></ul><p><code>数据类型[] 数组名 = new 数据类型[数组长度];</code></p><p>数组长度其实就是数组中元素的个数</p><ul><li>举例：</li></ul><p><code>int[] arr = new int[3];</code></p><p>解释：定义了一个 int 类型的数组，这个数组中可以存放3个 int 类型的值</p><p>2、静态初始化：初始化时指定每个数组元素的初始值，由系统决定数组长度</p><ul><li>格式：</li></ul><p><code>数据类型[] 数组名 = new 数据类型[]{元素1, 元素2, ...};</code></p><ul><li>举例：</li></ul><p><code>int[] arr = new int[]{1, 2, 3};</code></p><p>解释：定义了一个 int  类型的数组，这个数组中可以存放3个 int 类型的值，值分别是：1, 2, 3</p><p>简化写法：<code>int[] arr = {1, 2, 3};</code></p><h2 id="三、数组操作常见的两个问题"><a href="#三、数组操作常见的两个问题" class="headerlink" title="三、数组操作常见的两个问题"></a>三、数组操作常见的两个问题</h2><ul><li><p>数组索引越界</p><ul><li><code>ArrayIndexOutOfBoundsException</code></li><li>访问到了数组中的不存在的索引时发生</li></ul></li><li><p>空指针异常</p><ul><li><code>NallPointerException</code></li><li>数组引用没有指向实体，却在操作实体中的元素时</li></ul></li></ul><h2 id="四、一位数组的内存分配"><a href="#四、一位数组的内存分配" class="headerlink" title="四、一位数组的内存分配"></a>四、一位数组的内存分配</h2><p>由于数组属于引用类型，所以其主体是放在堆中（存放 new 出来的东西）而在栈中（局部变量）对其引用</p><p><code>int arr[] = new int[3];</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210127160639755.png"></p><h2 id="五、二维数组"><a href="#五、二维数组" class="headerlink" title="五、二维数组"></a>五、二维数组</h2><p>其实二维数组就是一个元素为一位数组的数组</p><p>（因为：数组既可以存储基本数据类型，也可以存储引用数据类型）</p><h2 id="六、二维数组的定义格式"><a href="#六、二维数组的定义格式" class="headerlink" title="六、二维数组的定义格式"></a>六、二维数组的定义格式</h2><ul><li><p>格式1</p><ul><li><p><code>数据类型[][] 变量名 = new 数据类型[m][n];</code></p></li><li><p>m 表示这个二维数组有多少个一维数组</p></li><li><p>n 表示每一个一维数组的元素个数</p></li><li><p>举例：</p><p><code>int[][] arr = new int[3][2];</code></p><p>定义了一个二维数组 arr</p><p>这个二维数组有 3 个一维数组，名称是 <code>arr[0]</code>，<code>arr[1]</code>，<code>arr[2]</code>；</p><p>每个一维数组有2个元素，可以通过 <code>arr[m][n]</code> 来获取，表示获取第 m+1 个一维数组的第 n+1 个元素</p></li></ul></li><li><p>格式2</p><ul><li><p><code>数据类型[][] 变量名 = new 数据类型[m][n];</code></p></li><li><p>m 表示这个二维数组有多少个一维数组</p></li><li><p>这一次没有直接给出一维数组的元素个数，可以动态的给出</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][];</span><br><span class="line">arr[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">arr[<span class="number">1</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">2</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>];</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>格式3</p><ul><li><p><code>数据类型[][] 变量名 = new 数据类型[][]{{元素...}, {元素...}, {元素...}};</code></p></li><li><p>简化版格式：<code>数据类型[][] 变量名 = {{元素...}, {元素...}, {元素...}};</code></p></li><li><p>举例：</p><p><code>int[][] arr = {{1, 2, 3}, {4, 6}, {6}};</code></p></li></ul></li></ul><h2 id="七、二维数组的内存分配"><a href="#七、二维数组的内存分配" class="headerlink" title="七、二维数组的内存分配"></a>七、二维数组的内存分配</h2><p><code>int[][] arr = new int[3][];</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210127164103595.png"></p><p><code>arr[0] = new int[3];</code></p><p><code>arr[1] = new int[5];</code></p><p><code>arr[2] = new int[1];</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20210127164103587.png"></p><p>说明：这里 Java 与 C / C++ 语言在二维数组内存分配上最大的区别，在 C / C++ 中二维数组是一个合并成的一维数组，并在逻辑上为其划分为二维，而 Java 截然不同，在内存上更加清晰</p><p>由以上说明引出的三个注意点：</p><p>1、</p><p>在 C / C++ 中：<code>a[][n]</code> 是合法的，但 Java 不合法</p><p>在 Java 中：<code>a[m][]</code> 是合法的，但 C / C++ 不合法</p><p>2、</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][];</span><br><span class="line">arr[<span class="number">1</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">System.out.println(arr);<span class="comment">// [[I@1b6d3586</span></span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);<span class="comment">// null</span></span><br><span class="line">System.out.println(arr[<span class="number">1</span>]);<span class="comment">// [I@4554617c</span></span><br><span class="line">System.out.println(arr[<span class="number">2</span>]);<span class="comment">// null</span></span><br></pre></td></tr></tbody></table></figure><p>C / C++ 中：a 与 a[0] 都是表示二维数组的首地址</p><p>Java 中：a 与 a[0] 则不是一个概念</p><p>3、</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] arr = {{<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>},</span><br><span class="line">               {<span class="number">50</span>, <span class="number">10</span>},</span><br><span class="line">               {<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">100</span>, <span class="number">2000</span>}};</span><br><span class="line">System.out.println(a.length);<span class="comment">// 3</span></span><br><span class="line">System.out.println(a[<span class="number">1</span>].length);<span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二维数组名.length 表示二维数组中有多少个一维数组</span></span><br><span class="line"><span class="comment">// 二维数组名[n].length 表示二维数组中的第 n+1 个一维数组有多少个元素</span></span><br></pre></td></tr></tbody></table></figure><h1 id="16"><a href="#16" class="headerlink" title="16"></a>16</h1><p><code>System.out.println();</code> 的风格优化</p><p>例如：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">5</span>;</span><br><span class="line">System.out.printf(<span class="string">"a = "</span> + a + <span class="string">", "</span> + <span class="string">"b = "</span> + b);<span class="comment">// a=10, b=5</span></span><br></pre></td></tr></tbody></table></figure><h1 id="17"><a href="#17" class="headerlink" title="17"></a>17</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> y = (x++) + (++x) + (x * <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 运算顺序从左到右，所以：y = 70</span></span><br><span class="line"><span class="comment">// 当然 ++、-- 一般只应该单独独立，这样的风格很差</span></span><br></pre></td></tr></tbody></table></figure><h1 id="18"><a href="#18" class="headerlink" title="18"></a>18</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x += <span class="number">4</span> + <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// x = x + (4 + 3 + 1)</span></span><br><span class="line"><span class="comment">//即：+= -= *= ... 都是：左 = 左 + (右全部)</span></span><br></pre></td></tr></tbody></table></figure><h1 id="19"><a href="#19" class="headerlink" title="19"></a>19</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> s = <span class="number">1</span>;</span><br><span class="line">s = s + <span class="number">1</span>;<span class="comment">// 报错！不兼容的类型：从 int 转换到 short 可能会有损（原因：出现了具体变量）</span></span><br><span class="line">s += <span class="number">1</span>;<span class="comment">// 正常！s += 1; 的本质是：s = (s的数据类型)(s + 1);</span></span><br></pre></td></tr></tbody></table></figure><h1 id="20"><a href="#20" class="headerlink" title="20"></a>20</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span> (x == <span class="number">3</span>) {</span><br><span class="line">    </span><br><span class="line">} <span class="comment">// 死循环！</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> y = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">while</span> (y = <span class="number">3</span>) {</span><br><span class="line">    </span><br><span class="line">} <span class="comment">// 报错！</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 原因：x = 3 本质上就是一个 3，而 Java 中 3 并不是 true.（与 C 语言的区别）</span></span><br><span class="line"><span class="comment">// 即：Java 中布尔值只能用 true false 表示！</span></span><br><span class="line"><span class="comment">// Java 不是 C！</span></span><br></pre></td></tr></tbody></table></figure><h1 id="21"><a href="#21" class="headerlink" title="21"></a>21</h1><p>switch 语句说明：</p><ul><li><code>case x:</code> x 只能是常量！（注意：<code>int b = 1; ... case b:</code> 报错！）</li><li><code>switch</code> 中只有遇到 <code>break;</code> 或 <code>}</code> 才会退出！</li><li><code>default:</code> 语句可以放在 <code>switch</code> 中的任何位置（但：优先推荐放在末尾）</li></ul><h1 id="22"><a href="#22" class="headerlink" title="22"></a>22</h1><p><code>\n</code> 换行符 与 <code>\r</code> 回车符的解释</p><ul><li><code>\n</code> 换行符的本质是去到当前光标的正下放</li><li><code>\r</code> 回车符的本质是去到当前光标所在行的第一个位置</li><li>在 C Java 中，<code>\n == \n\r == \r\n</code> 即：<code>\n</code> 便去到了下一行的第一个位置</li></ul><h1 id="23"><a href="#23" class="headerlink" title="23"></a>23</h1><p><code>\t</code> 制表符的解释</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"xxxxxxxxxxx"</span>);</span><br><span class="line">System.out.println(<span class="string">"1\tend"</span>);</span><br><span class="line">System.out.println(<span class="string">"12\tend"</span>);</span><br><span class="line">System.out.println(<span class="string">"123\tend"</span>);</span><br><span class="line">System.out.println(<span class="string">"1234\tend"</span>);</span><br><span class="line">System.out.println(<span class="string">"12345\tend"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xxxxxxxxxxx</span><br><span class="line">1end</span><br><span class="line">12end</span><br><span class="line">123end</span><br><span class="line">1234end</span><br><span class="line">12345end</span><br></pre></td></tr></tbody></table></figure><p><code>\t</code> 制表符原本是 8 个空格，当然在开发中经常将其改为 4 个空格，并且 <code>\t</code> 的实际空格数与 <code>\t</code> 前的字符数且相关，故可利用该特性来对齐文本！</p><h1 id="24"><a href="#24" class="headerlink" title="24"></a>24</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"'"</span>);</span><br><span class="line">System.out.println(<span class="string">"\'"</span>);</span><br><span class="line"><span class="comment">// '可以带转义字符，也不可以带</span></span><br></pre></td></tr></tbody></table></figure><h1 id="25"><a href="#25" class="headerlink" title="25"></a>25</h1><p><code>.nextLine()</code> 与 <code>.next()</code> 的说明</p><p><code>.nextLine()</code> 与 <code>.next()</code> 都是用于接收字符串的函数，但是，<code>.next()</code> 会自动丢弃字符串前的空格、回车，所以有下面几种特殊情况</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.print(<span class="string">"PLEASE INPUT INT NUM:"</span>);</span><br><span class="line"><span class="keyword">int</span> test1 = scanner.nextInt();</span><br><span class="line">System.out.println(test1);</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"PLEASE INPUT STRING:"</span>);</span><br><span class="line">String test2 = scanner.nextLine();</span><br><span class="line">System.out.println(test2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行效果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLEASE INPUT INT NUM:24</span><br><span class="line">24</span><br><span class="line">PLEASE INPUT STRING:</span><br></pre></td></tr></tbody></table></figure><p>解释：</p><p>在第一次输入 <code>24+回车</code> 后， test1 只是接收了 <code>24</code>，而 <code>回车符</code> 被留在了缓存区中，当 <code>.nextLine()</code> 开始执行时，<code>回车符</code> 会默认被当做字符接收</p><p>解决方法：</p><ul><li>1、最优方案</li></ul><p>在第二次输入前加入一条输入语句：</p><p><code>scanner.nextLine();        // 用于清空缓冲区的字符（回车符）</code></p><ul><li>2、用 <code>.next()</code> 代替 <code>.nextLine()</code></li></ul><p>该方案会忽略字符串前的空格（包括：回车符）</p><p>（一般用于不要空格的字符串输入，如：密码）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.print(<span class="string">"PLEASE INPUT INT NUM:"</span>);</span><br><span class="line">String test1 = scanner.nextLine();</span><br><span class="line">System.out.println(test1);</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">"PLEASE INPUT STRING:"</span>);</span><br><span class="line">String test2 = scanner.nextLine();</span><br><span class="line">System.out.println(test2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PLEASE INPUT INT NUM:zjr</span><br><span class="line">zjr</span><br><span class="line">PLEASE INPUT STRING:lxy</span><br><span class="line">lxy</span><br></pre></td></tr></tbody></table></figure><p>解释：这次之所以可行，是因为前一个为字符串，在输入 <code>zjr+回车</code> 后 <code>回车符</code> 也会被 test1 接受！并不会导致下一个 <code>.nextLine</code> 异常</p><p>对 <code>.next()</code> 的解释</p><p>1、对象：接受字符串</p><p>2、特点：从第一个非空字符开始到空字符结束</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jerry.eclipse.java;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.print(<span class="string">"Please input String:"</span>);</span><br><span class="line">String test = scanner.next();</span><br><span class="line">System.out.println(test);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"Please input String:"</span>);</span><br><span class="line">String test2 = scanner.next();</span><br><span class="line">System.out.println(test2);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行结果：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Please input String:zjr lxy</span><br><span class="line">zjr</span><br><span class="line">Please input String:</span><br><span class="line">lxy</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 注意事项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse IDE使用总结--Java小抄(9)</title>
      <link href="2021/01/04/Java-Supplement-9/"/>
      <url>2021/01/04/Java-Supplement-9/</url>
      
        <content type="html"><![CDATA[<h1 id="【Eclipse-IDE使用总结–Java小抄-9-】"><a href="#【Eclipse-IDE使用总结–Java小抄-9-】" class="headerlink" title="【Eclipse IDE使用总结–Java小抄(9)】"></a>【Eclipse IDE使用总结–Java小抄(9)】</h1><blockquote><p>原创内容，转载请注明出处！</p></blockquote><h1 id="一、Java开发常见工具介绍"><a href="#一、Java开发常见工具介绍" class="headerlink" title="一、Java开发常见工具介绍"></a>一、Java开发常见工具介绍</h1><ul><li><p>A:操作系统自带的记事本软件</p></li><li><p>B:高级记事本软件</p></li><li><p>C:集成开发环境 IDE(Integrated Development Environment)</p><ul><li>这种软件是用于程序开发环境的应用程序，一般包括代码编辑器，编译器，调试器和图形界面工具</li><li>集成了代码编写功能，分析功能，编译功能，调试功能等一体化的开发软件</li></ul></li></ul><h1 id="二、Eclipse概述"><a href="#二、Eclipse概述" class="headerlink" title="二、Eclipse概述"></a>二、Eclipse概述</h1><ul><li><p>Eclipse是一种可扩展的开放源代码的IDE。</p></li><li><p>Eclipse的特点描述</p><ul><li>免费</li><li>纯Java语言编写</li><li>免安装</li><li>扩展性强</li></ul></li><li><p>MyEclipse</p><ul><li>在Eclipse基础上追加的功能性插件，对插件收费</li><li>在Web开发中提供强大的系统架构平台</li></ul></li></ul><h1 id="三、Eclipse的下载，安装及卸载"><a href="#三、Eclipse的下载，安装及卸载" class="headerlink" title="三、Eclipse的下载，安装及卸载"></a>三、Eclipse的下载，安装及卸载</h1><ul><li><p>下载 <a href="http://eclipse.org/">http://eclipse.org/</a></p></li><li><p>安装</p><ul><li>压缩版    解压就可以使用(eclipse.exe)</li><li>安装版   双击运行,一路next即可(JDK)</li></ul></li><li><p>卸载</p><ul><li>压缩版 直接删除文件夹即可</li><li>安装版 专业卸载软件或者控制面板添加删除程序</li></ul></li></ul><h1 id="四、Eclipse的基本使用"><a href="#四、Eclipse的基本使用" class="headerlink" title="四、Eclipse的基本使用"></a>四、Eclipse的基本使用</h1><ul><li><p>选择工作空间</p><ul><li>工作空间  其实就是我们写的源代码所在的目录（不选择会默认指定为eclipse-workspace）</li></ul></li><li><p>用Eclipse来完成一个HelloWorld案例</p><ul><li>代码以项目为基本单位</li><li>创建项目</li><li>创建包</li><li>创建类</li><li>编写代码</li></ul></li><li><p>如何配置编译和运行环境</p><ul><li>Window-&gt;preferences-&gt;java-&gt;compiler编译环境设置</li><li>Window-&gt;preferences-&gt;java-&gt;Installed JREs编译环境设置</li><li>JDK与JRE版本最好一致（优选1.8）</li></ul></li><li><p>编译</p><ul><li>自动编译，在保存的那一刻帮你做好了（自动语法检查的前提）</li></ul></li><li><p>运行</p><ul><li>点击虫子后面的绿色内在三角形按钮</li><li>点击Run菜单下的run，也可以使用快捷键Ctrl+F11</li><li>选择要运行的文件或者在要运行的文件内容中<ul><li>右键 – Run as - Java Application即可</li></ul></li><li>看到Console即可，它就是Eclipse自带的控制台</li></ul></li><li><p>源代码语法检查</p><ul><li>红色波浪线（报错，必须解决）</li><li>黄色波浪线（警告，隐患提示）</li></ul></li></ul><h1 id="五、Eclipse主题设置"><a href="#五、Eclipse主题设置" class="headerlink" title="五、Eclipse主题设置"></a>五、Eclipse主题设置</h1><ul><li>自带主题<ul><li>Windows——&gt;Preferences——&gt;General——&gt;Appearance——&gt;Theme</li></ul></li><li>导入主题<ul><li>File——&gt;Import——&gt;General——&gt;Preferences——&gt;导入.epf——&gt;Finish</li></ul></li></ul><h1 id="六、Eclipse组成之视窗与视图"><a href="#六、Eclipse组成之视窗与视图" class="headerlink" title="六、Eclipse组成之视窗与视图"></a>六、Eclipse组成之视窗与视图</h1><ul><li><p>视窗  每一个基本的窗体被称为视窗</p><ul><li>PackageExplorer  显示项目结构，包，类，及资源</li><li>Outline   显示类的结构，方便查找，识别，修改</li><li>Console  程序运行的结果在该窗口显示</li><li>Problems 显示所有语法及错误所在的位置</li><li>Hierarchy 显示Java继承层次结构，选中类后F4</li></ul></li><li><p>视图  是由某些视窗的组合而成的。举例</p><ul><li>Java视图</li><li>Debug视图</li><li>Eclipse右上角可以点击按钮切换</li></ul></li></ul><h1 id="七、代码风格设置"><a href="#七、代码风格设置" class="headerlink" title="七、代码风格设置"></a>七、代码风格设置</h1><ul><li>花括号偏好设置<ul><li>Windows—preference—java—codestyle—formatter<ul><li>新建一个Active profile</li><li>Braces选项卡中选择next line</li></ul></li></ul></li></ul><h1 id="八、Eclipse中工作空间的基本配置"><a href="#八、Eclipse中工作空间的基本配置" class="headerlink" title="八、Eclipse中工作空间的基本配置"></a>八、Eclipse中工作空间的基本配置</h1><ul><li>程序的编译和运行的环境配置</li><li>如何去掉默认注释</li><li>行号的显示和隐藏</li><li>字体大小及颜色</li><li>窗体布局重置</li><li>控制台显示</li><li>均位于Window——&gt;Preferences内设置</li></ul><h1 id="九、程序的编译和运行的环境配置"><a href="#九、程序的编译和运行的环境配置" class="headerlink" title="九、程序的编译和运行的环境配置"></a>九、程序的编译和运行的环境配置</h1><ul><li>window – Preferences – Java<ul><li>编译环境：Compiler默认</li><li>认选中的就是最高版本</li><li>运行环境：Installed JREs默认会找你安装的那个JDK，建议配置了Java的环境变量<ul><li>低编译，高运行，可以</li><li>高编译，低运行，不可以</li></ul></li><li>建议，编译和运行的版本一致</li></ul></li></ul><h1 id="十、字体大小及颜色"><a href="#十、字体大小及颜色" class="headerlink" title="十、字体大小及颜色"></a>十、字体大小及颜色</h1><ul><li><p>Java代码区域的字体大小和颜色：</p><ul><li>window – Preferences – General – Appearance – Colors And Fonts – Java修改 – Java Edit Text Font</li></ul></li><li><p>控制台</p><ul><li>window – Preferences – General – Appearance – Colors And Fonts – Debug – Console font</li></ul></li><li><p>其他文件</p><ul><li>window – Preferences – General – Appearance – Colors And Fonts – Basic – Text Font</li></ul></li></ul><h1 id="十一、窗体设置"><a href="#十一、窗体设置" class="headerlink" title="十一、窗体设置"></a>十一、窗体设置</h1><ul><li><p>行号的显示和隐藏</p><ul><li>显示：在代码区域的最左边的空白区域，右键 – Show Line Numbers即可</li><li>隐藏：把上面的动作再做一次</li></ul></li><li><p>窗体布局重置</p><ul><li>Window – Reset Perspective    </li></ul></li><li><p>控制台显示</p><ul><li>Window–Show View—Console</li></ul></li></ul><h1 id="十二、Eclipse中快捷键的使用"><a href="#十二、Eclipse中快捷键的使用" class="headerlink" title="十二、Eclipse中快捷键的使用"></a>十二、Eclipse中快捷键的使用</h1><ul><li><p>内容辅助键</p><ul><li>Alt+/ 起提示作用</li><li>main+alt+/,syso+alt+/,给出其他提示</li></ul></li><li><p>常用快捷键</p><ul><li>删除行 ctrl+d</li><li>格式化  ctrl+shift+f</li><li>导入包  ctrl+shift+o </li><li>注释  ctrl+/,ctrl+shift+/,ctrl+shift+\</li><li>代码上下移动 选中代码alt+上/下箭头</li><li>查看源码  选中类名(F3或者Ctrl+鼠标点击)</li></ul></li></ul><h1 id="十三、注释"><a href="#十三、注释" class="headerlink" title="十三、注释"></a>十三、注释</h1><ul><li><p>单行注释：</p><ul><li>选中需要被注释的内容：ctrl+/</li><li>想取消注释，再次选中，然后ctrl+/</li></ul></li><li><p>多行注释：</p><ul><li>选中需要被注释的内容：ctrl+shift+/    </li><li>想取消注释，再次选中，然后ctrl+shift+\</li></ul></li></ul><h1 id="十四、导包"><a href="#十四、导包" class="headerlink" title="十四、导包"></a>十四、导包</h1><ul><li><p>导入方式：</p><ul><li>手动写完代码，需要导入包：ctrl+shift+o</li><li>通过alt+/提示的类，会自动把包导入</li></ul></li><li><p>有些类在多个包下都有</p><ul><li>按了提示后，会把所有的包给出显示，让用户选择</li></ul></li></ul><h1 id="十五、自动生成方法"><a href="#十五、自动生成方法" class="headerlink" title="十五、自动生成方法"></a>十五、自动生成方法</h1><ul><li><p>自动生成构造方法</p><ul><li>无参构造方法 在代码区域右键–source–Generate Constructors from Superclass. (Alt + Shift + S + C)</li><li>带参构造方法 在代码区域右键–source–Generate Constructors using fields. (Alt + Shift + S + O)</li></ul></li><li><p>自动生成get/set方法</p><ul><li>在代码区域右键–source–Generate Getters and Setters. (Alt + Shift + S + R)</li></ul></li></ul><h1 id="十六、继承抽象类和实现接口"><a href="#十六、继承抽象类和实现接口" class="headerlink" title="十六、继承抽象类和实现接口"></a>十六、继承抽象类和实现接口</h1><ul><li><p>以前先写类，然后在类中在去继承类或者实现接口</p></li><li><p>现在在创建类的时候，选择要继承的类或者实现的接口</p></li><li><p>Object是所有类的父类，所有类都直接或者间接的继承自Object</p></li></ul><h1 id="十七、Eclipse中打jar包并使用jar包"><a href="#十七、Eclipse中打jar包并使用jar包" class="headerlink" title="十七、Eclipse中打jar包并使用jar包"></a>十七、Eclipse中打jar包并使用jar包</h1><ul><li><p>jar是什么?</p><ul><li>jar是多个class文件的压缩包</li></ul></li><li><p>jar有什么用?</p><ul><li>用别人写好的东西，直接拿过来使用</li><li>代码封装实现代码匿藏（只提供.class文件，无.java文件）</li></ul></li><li><p>打jar包</p><ul><li>选中项目–右键–Export–Java–Jar–自己指定一个路径和一个名称.jar–Finish</li></ul></li><li><p>使用jar包</p><ul><li>复制jar包，粘贴到要使用的项目路径下（先点击项目名——&gt;然后右键：选择paste粘贴）</li><li>选中jar包，右键Build path – add to build path</li></ul></li></ul><h1 id="十八、Eclipse中如何删除项目和导入项目"><a href="#十八、Eclipse中如何删除项目和导入项目" class="headerlink" title="十八、Eclipse中如何删除项目和导入项目"></a>十八、Eclipse中如何删除项目和导入项目</h1><ul><li><p>删除项目</p><ul><li>选中项目 – 右键 – 删除<ul><li>从项目区域中删除</li><li>从硬盘上删除</li></ul></li></ul></li><li><p>导入项目</p><ul><li>在项目区域右键找到import</li><li>找到General，展开，并找到<ul><li>Existing Projects into Workspace</li></ul></li><li>点击next,然后选择你要导入的项目<ul><li>注意：这里选择的是项目名称</li></ul></li></ul></li></ul><h1 id="十九、Eclipse中几个常见小问题"><a href="#十九、Eclipse中几个常见小问题" class="headerlink" title="十九、Eclipse中几个常见小问题"></a>十九、Eclipse中几个常见小问题</h1><ul><li><p>如何查看项目所在路径</p></li><li><p>选中 – 右键 – Properties – Resource – Location</p></li><li><p>导入项目要注意的问题</p><ul><li>项目区域中不可能出现同名的项目(新建或者导入)</li><li>自己随意建立的文件夹是不能作为项目导入的</li></ul></li><li><p>修改项目问题</p><ul><li>不要随意修改项目名称</li><li>如果真要修改，不要忘记了配置文件.project中的<ul><li>&lt;name&gt;把这里改为你改后的名称&lt;/name&gt;</li></ul></li></ul></li></ul><h1 id="二十、Eclipse中代码的高级-Debug-调试"><a href="#二十、Eclipse中代码的高级-Debug-调试" class="headerlink" title="二十、Eclipse中代码的高级(Debug)调试"></a>二十、Eclipse中代码的高级(Debug)调试</h1><ul><li><p>Debug的作用</p><ul><li>调试程序</li><li>查看程序执行流程</li></ul></li><li><p>如何查看程序执行流程</p><ul><li>什么是断点（就是一个标记，表示从哪里开始看程序）</li><li>如何设置断点（在语句的最左边，双击即可）</li><li>在哪里设置断点（哪里不会加哪里）</li><li>能设置几个断点（没有限制，但建议5个以内）</li><li>如何运行设置断点后的程序（在代码区域–右键–Debug as–Java Appliaction）</li><li>看哪些地方<ul><li>看源代码：对照看程序的执行步骤<ul><li>step into, step over, step return的区别<ul><li>step into就是单步执行，遇到子函数就进入并且继续单步执行（F5）</li><li>step over是在单步执行时，在函数内遇到子函数时不会进入子函数内单步执行，而是将子函数整个执行完再停止，也就是把子函数整个作为一步（F6）</li><li>step return就是单步执行到子函数内时，用step return就可以执行完子函数余下部分，并返回到上一层函数（F7）</li><li>step into：进入子函数</li><li>step over：越过子函数，但子函数会执行</li><li>step return：跳出子函数 </li></ul></li></ul></li><li>看Debug界面：对照看程序的执行步骤，特别关注其中的线程！</li><li>看Variables界面：看变量的产生、赋值、变化、及消失</li></ul></li></ul></li><li><p>如何去除断点（a:把添加的动作再做一遍   b:Breakpoints界面点击双叉一键清除）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《3D打印与工业制造》—— 读书笔记</title>
      <link href="2020/12/24/3D-Printing-And-Industry-Manufacturing-Reading-Notes/"/>
      <url>2020/12/24/3D-Printing-And-Industry-Manufacturing-Reading-Notes/</url>
      
        <content type="html"><![CDATA[<h1 id="《3D打印与工业制造》——-读书笔记"><a href="#《3D打印与工业制造》——-读书笔记" class="headerlink" title="《3D打印与工业制造》—— 读书笔记"></a>《3D打印与工业制造》—— 读书笔记</h1><blockquote><p>原创内容，学习不易，转载请注明出处！</p></blockquote><h1 id="一、读后感——-“WOW”"><a href="#一、读后感——-“WOW”" class="headerlink" title="一、读后感—— “WOW”"></a>一、读后感—— “WOW”</h1><p>​        可以这么说，《3D打印与工业制造》这本书是我第一次以真正的视角理性的认识3D打印，在几年以前我就已经听闻过3D打印技术了，那时候觉得这项技术简直太不可思议了，将来的世界一定可以因此完全改变，可是过了几年后，突然又觉得3D打印貌似没有怎么走进我的生活啊，好像3D打印技术只是在一些特殊领域得到了发挥，而一些常见的地方几乎不会看到3D打印的身影，尤其这两年，3D打印的负面新闻接踵而至，技术复杂、价格昂贵、批量生产效率低，貌似3D打印有种种严重的问题，貌似3D打印距离走进普通人的生活还很遥远，貌似我也开始否定曾经的看法了……</p><p>​        有幸在大学班主任老师提供的机会下，开始从《3D打印与工业制造》这本书开始走进一个真正客观的3D打印世界，在这本书中我分别从：实践、市场、应用，三个部分客观了解了3D打印的实际行情，毫不夸张的说，在读完这本书后，我虽然没有了像几年前第一次听到3D打印那样的惊讶感，但我却有一种强烈的顿悟感，有一种恍然大悟、茅塞顿开的感悟，“原来，这才是3D打印！”</p><p>​        3D打印并不是不行、3D打印并不是没有走进我的生活、3D打印并不是泡沫科技、3D打印是实实在在的东西、3D打印是能够创造无限价值的东西、3D打印更是一种接地气的东西，在我们不知道的角落，无论是尖端领域还是日常领域，3D打印都在发挥他自身重要的价值！我们每一个人如今都或多或少已经和3D打印间接的接触了！之所以我们日常生活中还很少看见3D打印的广泛运用，那是因为目前的社会发展和基础建设还没有跟上3D打印技术快速普及的时代，而对于老牌的企业，要在短期内将传统的制造业与3D打印有机的结合是一件非常困难的事情，可能在短时期内付出与收益比例会很低，所以传统制造业占时没有广泛运用3D打印，而对于一些新兴企业、小型工作室，3D打印已经在很大程度上成为他们的首选制造工具了，而对于一些特殊的市场，比如：定制行业，高科技行业，磨具行业，高精制造业，科研行业……许多零件产品的设计制造利用3D打印是质的飞跃，其所蕴含的价值是远远超过传统的设计制作流程与技术的，所以我认为3D打印一定有完全改变世界的那一天，此时3D打印还处于婴儿阶段，也许在不远的未来3D打印会如同互联网经济颠覆传统经济一样颠覆传统制造业！</p><p>​        乐观的同时也要看到关键的因素，3D打印要早日普及，有很多方面的问题需要解决，首先肯定就是技术了，无论是打印的精度、速度、材料、规模、价格……都是技术要解决的问题，其次还要解决产业过渡的问题，目前对于传统制造行业，虽然已经看到3D打印未来的巨大价值了，也在关键业务上运用了3D打印的技术，但是要让其放弃大部分已经耕耘了多年的传统制造技术，放下身段，从头开始研究3D打印结合制造业，是非常困难的，所以就需要相关的社会及政策的支持、补贴……来促进3D打印走进传统制造业，一但传统制造业大规模运用了3D打印，那么3D打印自然也就普及了。</p><p>​        当然，一项新技术的革命是需要时间与耐心的，我正值青春年少，有幸认识3D打印，希望自己可以在其中深入学习，提前一窥未来的世界，也为未来世界的到来，做好准备，“WOW”！</p><hr><h1 id="二、实践篇"><a href="#二、实践篇" class="headerlink" title="二、实践篇"></a>二、实践篇</h1><h2 id="1-、突破思维局限"><a href="#1-、突破思维局限" class="headerlink" title="(1)、突破思维局限"></a>(1)、突破思维局限</h2><h3 id="lt-1-gt-、突破传统制造思维的限制"><a href="#lt-1-gt-、突破传统制造思维的限制" class="headerlink" title="<1>、突破传统制造思维的限制"></a>&lt;1&gt;、突破传统制造思维的限制</h3><h3 id="lt-2-gt-、为增材制造而设计的规则"><a href="#lt-2-gt-、为增材制造而设计的规则" class="headerlink" title="<2>、为增材制造而设计的规则"></a>&lt;2&gt;、为增材制造而设计的规则</h3><h3 id="lt-3-gt-、重塑产品"><a href="#lt-3-gt-、重塑产品" class="headerlink" title="<3>、重塑产品"></a>&lt;3&gt;、重塑产品</h3><h3 id="lt-4-gt-、数据赋能增材制造生产"><a href="#lt-4-gt-、数据赋能增材制造生产" class="headerlink" title="<4>、数据赋能增材制造生产"></a>&lt;4&gt;、数据赋能增材制造生产</h3><h3 id="lt-5-gt-、仿真提升过程可控性"><a href="#lt-5-gt-、仿真提升过程可控性" class="headerlink" title="<5>、仿真提升过程可控性"></a>&lt;5&gt;、仿真提升过程可控性</h3><h3 id="lt-6-gt-、实现轻量化的四种途径"><a href="#lt-6-gt-、实现轻量化的四种途径" class="headerlink" title="<6>、实现轻量化的四种途径"></a>&lt;6&gt;、实现轻量化的四种途径</h3><h3 id="lt-7-gt-、创成式设计"><a href="#lt-7-gt-、创成式设计" class="headerlink" title="<7>、创成式设计"></a>&lt;7&gt;、创成式设计</h3><h3 id="lt-8-gt-、小点阵大作用"><a href="#lt-8-gt-、小点阵大作用" class="headerlink" title="<8>、小点阵大作用"></a>&lt;8&gt;、小点阵大作用</h3><h3 id="lt-9-gt-、多材料3D打印"><a href="#lt-9-gt-、多材料3D打印" class="headerlink" title="<9>、多材料3D打印"></a>&lt;9&gt;、多材料3D打印</h3><h3 id="lt-10-gt-、超材料与3D打印"><a href="#lt-10-gt-、超材料与3D打印" class="headerlink" title="<10>、超材料与3D打印"></a>&lt;10&gt;、超材料与3D打印</h3><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>除了成本、精度、效率等因素外，制约3D打印的发展的一大因素是：“我们自己思维的限制”。</p><p>3D打印对产品的重塑，不仅包括其外观，还包括性能的提升。</p><p>3D打印对供应链也有重塑作用，并且可以改变商业模式。</p><p>3D打印技术并不是一种技术，而是集成在一起的一系列硬件、软件技术系统。</p><p>突破传统制造思维的限制是增材制造是否能发挥潜力的一大挑战。</p><p>增材制造技术也有其本身工艺特征，在设计时要严格遵循其工艺特征。</p><p>不能把传统制造方式的惯用思维直接拿来用，应该打破思维惯性，采用全新的设计思路，结合感性与理性去重塑产品的设计。</p><p>应该重视信息化手段实现3D打印数据的自动化管理，让产品可以追溯。</p><p>3D打印有许多颠覆传统制造业的设计制造思路，应该大力发挥其特点。</p><p>3D打印须要对材料有一定深度的认知，这是用好3D打印的基础。</p><h2 id="2-、增材制造的国际标准"><a href="#2-、增材制造的国际标准" class="headerlink" title="(2)、增材制造的国际标准"></a>(2)、增材制造的国际标准</h2><h3 id="lt-1-gt-、ASTM国际标准概述"><a href="#lt-1-gt-、ASTM国际标准概述" class="headerlink" title="<1>、ASTM国际标准概述"></a>&lt;1&gt;、ASTM国际标准概述</h3><h3 id="lt-2-gt-、金属材料制造的现状与ASTM国际标准"><a href="#lt-2-gt-、金属材料制造的现状与ASTM国际标准" class="headerlink" title="<2>、金属材料制造的现状与ASTM国际标准"></a>&lt;2&gt;、金属材料制造的现状与ASTM国际标准</h3><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>ASTM：美国材料与试验学会</p><p>F42委员会：增材制造技术委员会</p><p>国际标准对于3D打印的大规模普及是非常有意义的！</p><h2 id="3-、成功3D打印零件的要素"><a href="#3-、成功3D打印零件的要素" class="headerlink" title="(3)、成功3D打印零件的要素"></a>(3)、成功3D打印零件的要素</h2><h3 id="lt-1-gt-、金属3D打印质量控制的三种方法"><a href="#lt-1-gt-、金属3D打印质量控制的三种方法" class="headerlink" title="<1>、金属3D打印质量控制的三种方法"></a>&lt;1&gt;、金属3D打印质量控制的三种方法</h3><h3 id="lt-2-gt-、安全生产"><a href="#lt-2-gt-、安全生产" class="headerlink" title="<2>、安全生产"></a>&lt;2&gt;、安全生产</h3><h3 id="lt-3-gt-、后处理对增材制造的影响"><a href="#lt-3-gt-、后处理对增材制造的影响" class="headerlink" title="<3>、后处理对增材制造的影响"></a>&lt;3&gt;、后处理对增材制造的影响</h3><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>3D打印技术在零件的质量检测方向拥有了更加不同的检测技术</p><p>同时为了更好的检测3D打印的零件，所以必须制定新的检测方式，还需要建立新的质量认证方式和标准。</p><p>金属3D打印质量控制的三种方法：过程前的控制、过程中的控制、过程后的控制——质量检测。</p><p>3D打印依旧要注意安全问题，同时在安全保障时要切合3D打印实际的特点来制定相关的安保措施。</p><hr><h1 id="三、市场篇"><a href="#三、市场篇" class="headerlink" title="三、市场篇"></a>三、市场篇</h1><h2 id="1-、3D打印的发展：宏观层面"><a href="#1-、3D打印的发展：宏观层面" class="headerlink" title="(1)、3D打印的发展：宏观层面"></a>(1)、3D打印的发展：宏观层面</h2><h3 id="lt-1-gt-、3D打印进入生产"><a href="#lt-1-gt-、3D打印进入生产" class="headerlink" title="<1>、3D打印进入生产"></a>&lt;1&gt;、3D打印进入生产</h3><h3 id="lt-2-gt-、迎接商业模式的重构"><a href="#lt-2-gt-、迎接商业模式的重构" class="headerlink" title="<2>、迎接商业模式的重构"></a>&lt;2&gt;、迎接商业模式的重构</h3><h3 id="lt-3-gt-、国内当前三大“接地气”的机会"><a href="#lt-3-gt-、国内当前三大“接地气”的机会" class="headerlink" title="<3>、国内当前三大“接地气”的机会"></a>&lt;3&gt;、国内当前三大“接地气”的机会</h3><h3 id="总结：-3"><a href="#总结：-3" class="headerlink" title="总结："></a>总结：</h3><p>宏观层面——波涛汹涌</p><p>3D打印要与应用端真正的结合，一定要认清一个现实的问题：</p><p>对于老牌企业：</p><p>要将耕耘了多年的传统制造业技术更替为新兴的3D打印技术是非常痛苦的，因为供应链、库存管理、员工培训、投资回报比例……都是很难解决的问题。</p><p>对于新兴企业：3D打印技术便可以在很多的方面成为企业发展的助力大法。</p><p>凯文·凯利在《新经济， 新规则》一书中曾说过， 企业从一个山峰直接跳到另外一个山峰是不可能做到的 。 不论一个组织有多明智、 速度有多快， 要去到 想要去的地方， 它必须一步一步地从原来所在的地方走下来， 放下曾经的辉煌成就， 这会使人感到一种痛苦。</p><p>这种难熬的过程不仅适用于网络经济， 也适用于实体经济， 增材制造与应用端的结合， 如何切入到应用端， 而应用端如何放下以往的辉煌， 努力在增材制造领域创造新的成绩， 这也是一种难熬的过程。</p><p>虽然3D打印技术极具吸引力， 但是从20世纪80年代诞生至今它与应用端的结合速度非常缓慢， 究其原因， 除了3D打印技术本身还有许多需要完善之处， 除了材料还需要更好更便宜以外， 我们也不应低估了应用企业做出这种颠裂性转型所需要付出的努力。</p><p>凯文·凯利在《新经济， 新规则》中还指出， 在新经济波涛汹涌， 快速变化的环境中， 只有反应敏捷、 顺应变化、 行动快速的公司才能成功。快速走向新 方向只解决一半问题， 快速放弃旧有成就才能解决另一半问题。 而目前处于30 打印技术应用端的工业制造企业正走在哪段路程之上呢？我们可以边了解3D打印技术及其应用的宏观、 微观发展情况和发展趋势边思考这个问题。</p><p>国内目前3D打印三大接地气的机会：</p><p>牙科、随形冷却模具、电动汽车</p><h2 id="2-、3D打印的发展：微观层面"><a href="#2-、3D打印的发展：微观层面" class="headerlink" title="(2)、3D打印的发展：微观层面"></a>(2)、3D打印的发展：微观层面</h2><h3 id="lt-1-gt-、金属3D打印和冶金加工学"><a href="#lt-1-gt-、金属3D打印和冶金加工学" class="headerlink" title="<1>、金属3D打印和冶金加工学"></a>&lt;1&gt;、金属3D打印和冶金加工学</h3><h3 id="lt-2-gt-、多样化的金属3D打印技术"><a href="#lt-2-gt-、多样化的金属3D打印技术" class="headerlink" title="<2>、多样化的金属3D打印技术"></a>&lt;2&gt;、多样化的金属3D打印技术</h3><h3 id="lt-3-gt-、走向生产的塑料3D打印"><a href="#lt-3-gt-、走向生产的塑料3D打印" class="headerlink" title="<3>、走向生产的塑料3D打印"></a>&lt;3&gt;、走向生产的塑料3D打印</h3><h3 id="总结：-4"><a href="#总结：-4" class="headerlink" title="总结："></a>总结：</h3><p>微观层面——暗流涌动</p><p>3D打印进入了快速发展的通道，宏观层面可以说是波涛汹涌，微观层面可以说是暗流涌动，踏入3D打印的浪潮之中， 不仅仅需要对宏观层面的应用发展趋势时刻保持同步，还需要对微观层面的技术发展时刻关注，否则一不留神就有误入歧途的可能性。</p><p>乔布斯曾经说过， 只有当你回头看时， 才会发现这些过去的点其实已经画出了那条线。所以，要相信每一个点迟早都会连接到一起。这的确是3D打印发展所带给人的直观感受，你经常会因为一门千里的变化感到摸不着头绪，然而过段时间 ， 很多技术与应用的发展就像拼图似的呈现出一种立体清晰的场景来。</p><p>3D打印行业每一个努力的点正在连成一条线， 这些线正在呈现一个立体的面， 有起有伏，微观的变化带来宏观的发展， 宏观的发展牵引微观的进步这是片时我们看到的一个点，这个点闪闪发光的同时，也显得十分孤立。我们已经习惯汽车是山大型工厂流水线制造出来的，而像搭积木一样“拼凑”一 辆车， 这样的制造汽车方式将是革命性的。</p><p>很快，发展到在中国开发及生产电动汽车这样一条线， 进而这条线或许还会影响到上海电动汽车设计与生产 在全国的影响力这个面户 可以说，3D打印正在点亮制造业的创新活力</p><h2 id="3-、3D打印领导企业的战略布局"><a href="#3-、3D打印领导企业的战略布局" class="headerlink" title="(3)、3D打印领导企业的战略布局"></a>(3)、3D打印领导企业的战略布局</h2><h3 id="lt-1-gt-、向3D打印发力的巨无霸们"><a href="#lt-1-gt-、向3D打印发力的巨无霸们" class="headerlink" title="<1>、向3D打印发力的巨无霸们"></a>&lt;1&gt;、向3D打印发力的巨无霸们</h3><h3 id="lt-2-gt-、材料巨头加快增材制造步伐"><a href="#lt-2-gt-、材料巨头加快增材制造步伐" class="headerlink" title="<2>、材料巨头加快增材制造步伐"></a>&lt;2&gt;、材料巨头加快增材制造步伐</h3><h3 id="lt-3-gt-、航空航天企业的多重布局"><a href="#lt-3-gt-、航空航天企业的多重布局" class="headerlink" title="<3>、航空航天企业的多重布局"></a>&lt;3&gt;、航空航天企业的多重布局</h3><h3 id="总结：-5"><a href="#总结：-5" class="headerlink" title="总结："></a>总结：</h3><p>近年来， 材料制造商加强了对增材制造及技术的投入， 尤其是像 DSM、巴斯夫、 沙特基础这样的化工材料企业。<br>他们的共同特点是早在多年前就推出了3D打印材料， 初期推出的材料种类少， 仅适用于少数3D打印技术。但是通过与增材制造应用端的不断合作， 以及对外收购3D打印企业， 这些材料企业对市场和用户的应用要求有若深刻的理解， 对于3D打印技术前景的信心也不断增强。<br>2016年以来， 几家大型材料制造商纷纷成立了专门的增材制造部门或子公司， 为推出更广泛的3D打印材料和更细分的增材制造解决方案奠定了基础， 也 在材料制造圈掀起一股增材制造热潮。 这其中包括欧瑞康、吉凯恩、 美铝等金属 材料与方案解决商， 还包 括赢创 (EVONIC )、帝斯曼 (DSM )、巴斯夫(BASF) 、沙特基础工业 (SABJC) 等塑料材料提供商。</p><h2 id="4-、3D打印与数字化制造趋势"><a href="#4-、3D打印与数字化制造趋势" class="headerlink" title="(4)、3D打印与数字化制造趋势"></a>(4)、3D打印与数字化制造趋势</h2><h3 id="lt-1-gt-、3D打印-数字化生产模式"><a href="#lt-1-gt-、3D打印-数字化生产模式" class="headerlink" title="<1>、3D打印+数字化生产模式"></a>&lt;1&gt;、3D打印+数字化生产模式</h3><h3 id="lt-2-gt-、与大数据“手牵手”"><a href="#lt-2-gt-、与大数据“手牵手”" class="headerlink" title="<2>、与大数据“手牵手”"></a>&lt;2&gt;、与大数据“手牵手”</h3><h3 id="总结：-6"><a href="#总结：-6" class="headerlink" title="总结："></a>总结：</h3><p>3D打印技术将三维数字模型转化为实际三维物体的能力可以比传统制造技术（如机械加工、 注塑和热成型）具有多方面的优势。</p><p>3D打印利于实现大规模定制、 复杂零件几何形状的形成，尤其是对于那些不容易被注塑或者铸造出来的零件几何形状。</p><p>3D打印与数字化制造所需的材料不仅要达到必要的力学性能和经济指标，而且还要设计成容易通过软件控制的，以数据为中心的制造技术。3D打印所实现的数字化制造过程，尤其是塑料领域正在面临这个挑战。</p><p>不仅仅是塑料，金属3D打印也在悄然进入到数字化生产线领域。</p><p>对于工业制造企业来说，实现数字化生产转型也并非意味着需要完全放弃传统制造工艺转而采用3D打印直接制造最终产品，将3D打印引入制造流程与传统工艺相结合，也是实现数字化生产的一条道路。 </p><p>当前3D打印还没有成为一种主流制造技术的一大限制因素是，能否制造出合格的零件主要是由人的经验决定的，这样的经验探索令人感受到折磨，而经验是难以复制的，这极大地限制了3D打印技术的广泛使用。而数字化的好处是能够读取和利用大址的数据，从而智能化地控制3D打印质拢，用科学的方法代替经验对30打印质量的影响。而只有3D打印可以达到更高的产品质量稳定性和一致性，才能使这一技术进入到真正的上升曲线中。</p><h2 id="5-、各国政府的支持及科研机构"><a href="#5-、各国政府的支持及科研机构" class="headerlink" title="(5)、各国政府的支持及科研机构"></a>(5)、各国政府的支持及科研机构</h2><h3 id="lt-1-gt-、各国政府的支持"><a href="#lt-1-gt-、各国政府的支持" class="headerlink" title="<1>、各国政府的支持"></a>&lt;1&gt;、各国政府的支持</h3><h3 id="lt-2-gt-、硕果累累的两大科研机构"><a href="#lt-2-gt-、硕果累累的两大科研机构" class="headerlink" title="<2>、硕果累累的两大科研机构"></a>&lt;2&gt;、硕果累累的两大科研机构</h3><h3 id="总结：-7"><a href="#总结：-7" class="headerlink" title="总结："></a>总结：</h3><p>中国、 美国、 德国、 英国、 新加坡等多个国家或区域的政府对千增材制造研发给予了支持和重视。</p><p>那么，3D打印技术备受关注的原因是因为3D打印技术为制造企业所创造的产品附加价值。</p><p>增材制造技术受到了我国多部门的政策支持， 使增材制造行业进入快速发展期， 这为我国企业带来前所术有的机遇。 在企业得以快速发展的同时， 也由于在商业模式和战略能力等方面存在的问题而面临着风险。</p><p>2012年，美国时任总统奥巴马呼吁要建立一个新兴制造技术研究院。 当年美国国家增材制造创新研究院成立。美国国家增材制造创新研究院是由美国国防部、能源部、 美国国家航空航天局、 美国国家科学基金会、 商务部5家政府部门，以及俄亥俄，州、 宾夕法尼亚和西弗吉尼亚州的企业、 学校和非营利性组织组成的联合团体共同出资建立的公私合营的机构。</p><h2 id="6-、教育"><a href="#6-、教育" class="headerlink" title="(6)、教育"></a>(6)、教育</h2><h3 id="lt-1-gt-、为K12教育服务的生态圈"><a href="#lt-1-gt-、为K12教育服务的生态圈" class="headerlink" title="<1>、为K12教育服务的生态圈"></a>&lt;1&gt;、为K12教育服务的生态圈</h3><h3 id="lt-2-gt-、多学科交叉的高等教育"><a href="#lt-2-gt-、多学科交叉的高等教育" class="headerlink" title="<2>、多学科交叉的高等教育"></a>&lt;2&gt;、多学科交叉的高等教育</h3><h3 id="总结：-8"><a href="#总结：-8" class="headerlink" title="总结："></a>总结：</h3><p>3D打印是一种具有实用性的专业技术，并且涉及了材料、数学、工业设计、工程等多个学科的交叉，因此3D打印增材制造会作为一门学科出现在高等教育体系中。</p><p>3D打印使得任何人都可以成为制造者，不论教育背景，不论肤色，不论年龄与性别，即使是一个孩子，也可以成为制造者。而3D打印教育当前还很落后，3D不仅仅需要重视大学的教育， 还要重视工人的教育， 不仅仅需要重视成年人的教育， 还要需要重视更早期的教育。</p><p>中小学课堂进行3D打印教育的目的显然是，3D打印机可以将将孩子们的设计创意转化为实物的一种便利的工具，而创意对于孩子们非常非常重要！</p><p>在美国、欧洲和中国，越来越多的学校认可了3D打印在基础教育中的重要性，也因此有很多学校开设了3D打印课程，安装了3D打印机已 不过安装3D打 印机只是教育的开始，如何融入现有的课程体系，如何用生动有趣的课程与模型套件来激发学生的能动性和想象力尤为重要。</p><p>在高等教育中，高等院校与3D打印的正面拥抱，不仅仅涉及研发3D打印设备、 材料、软件、工业应用等相关技术， 还可以将3D打印作为一种辅助教学工具。</p><hr><h1 id="四、应用篇"><a href="#四、应用篇" class="headerlink" title="四、应用篇"></a>四、应用篇</h1><h2 id="1-、航空航天"><a href="#1-、航空航天" class="headerlink" title="(1)、航空航天"></a>(1)、航空航天</h2><h3 id="lt-1-gt-、3D打印成为核心制造技术"><a href="#lt-1-gt-、3D打印成为核心制造技术" class="headerlink" title="<1>、3D打印成为核心制造技术"></a>&lt;1&gt;、3D打印成为核心制造技术</h3><h3 id="lt-2-gt-、催生下一代航空制造"><a href="#lt-2-gt-、催生下一代航空制造" class="headerlink" title="<2>、催生下一代航空制造"></a>&lt;2&gt;、催生下一代航空制造</h3><h3 id="lt-3-gt-、重新定义航空关键零件"><a href="#lt-3-gt-、重新定义航空关键零件" class="headerlink" title="<3>、重新定义航空关键零件"></a>&lt;3&gt;、重新定义航空关键零件</h3><h3 id="lt-4-gt-、机身与内饰走向经济性与个性化"><a href="#lt-4-gt-、机身与内饰走向经济性与个性化" class="headerlink" title="<4>、机身与内饰走向经济性与个性化"></a>&lt;4&gt;、机身与内饰走向经济性与个性化</h3><h3 id="lt-5-gt-、航空制造新赛道"><a href="#lt-5-gt-、航空制造新赛道" class="headerlink" title="<5>、航空制造新赛道"></a>&lt;5&gt;、航空制造新赛道</h3><h3 id="总结：-9"><a href="#总结：-9" class="headerlink" title="总结："></a>总结：</h3><p>我们不能陷入将3D打印与传统制造方法一对一比较的误区，原因在于我们很容易忽略3D打印不是在生产和原来一样的零件，而是生产完全不一样的零件，不一样的形状，不一样的材料，不一样的性能。</p><p>30打印来获得更高的生产效益的同时，还减少了对钦合金这样昂贵材料的浪费。</p><p>通过30打印这种工艺对产品形状创造的自由度，可以将以往需要多个零件组装在一起的零件以一体化结构的方式来完成，并且通过拓扑优化、创成式设计、仿真等软件实现以最少的材料达到最佳的性能。</p><p>将3D打印与传统制造方法一对一去比较是一个 “ 陷阱”，我们衡量3D打印的价值需要跳出单件加工效率、单件成本这些思维局限，应该站在产品生命周期的角度来评估。</p><p>一方面从产业链的角度看，3D 打印贯穿了航空行业的研发、 制造与后市场。 另一方面，从产品生命周期的角度看3D 打印正在改变航空行业的产品，更轻、更紧凑、性能更好的零件提升了航空行业的绩效，让人们拥有了更美好的出行体验。</p><p>3D打印在飞机制造中，已经解决了普通制造技术对于一些特殊零件的制造，并且大大提升了该零件的性能。</p><p>3D打印因其特别的制造方式，在航空制造上提出了许许多多的新技术，新思路，新性能，3D打印正在催生下一代航空制造。</p><p>3D打印由于其区别于传统制造技术的特定，所以利用3D打印可以制造一些新式的零部件，可以说3D打印将在未来重新定义航空关键零部件。</p><h2 id="2-、汽车"><a href="#2-、汽车" class="headerlink" title="(2)、汽车"></a>(2)、汽车</h2><h3 id="lt-1-gt-、快速原型制造"><a href="#lt-1-gt-、快速原型制造" class="headerlink" title="<1>、快速原型制造"></a>&lt;1&gt;、快速原型制造</h3><h3 id="lt-2-gt-、概念车"><a href="#lt-2-gt-、概念车" class="headerlink" title="<2>、概念车"></a>&lt;2&gt;、概念车</h3><h3 id="lt-3-gt-、汽车零部件创新"><a href="#lt-3-gt-、汽车零部件创新" class="headerlink" title="<3>、汽车零部件创新"></a>&lt;3&gt;、汽车零部件创新</h3><h3 id="lt-4-gt-、定制化夹具制造"><a href="#lt-4-gt-、定制化夹具制造" class="headerlink" title="<4>、定制化夹具制造"></a>&lt;4&gt;、定制化夹具制造</h3><h3 id="lt-5-gt-、电动汽车时代为3D打印带来的机遇"><a href="#lt-5-gt-、电动汽车时代为3D打印带来的机遇" class="headerlink" title="<5>、电动汽车时代为3D打印带来的机遇"></a>&lt;5&gt;、电动汽车时代为3D打印带来的机遇</h3><h3 id="lt-6-gt-、切入定制化市场"><a href="#lt-6-gt-、切入定制化市场" class="headerlink" title="<6>、切入定制化市场"></a>&lt;6&gt;、切入定制化市场</h3><h3 id="总结：-10"><a href="#总结：-10" class="headerlink" title="总结："></a>总结：</h3><p>由于通过3D打印设备可以在不开发模具的情况下，快速地将原型制造出来，这项技术为汽车制造企业的设计工作节省了大属时间，同时节省了研发过程中的模具制造成本，为加速汽车的设计迭代创造了条件。汽车研发部门通过实车 安装3D打印零部件原型，能够及时发现问题，及时凋整优化结构设计方案， 这进一步提升了新设计的可靠性。 此外，汽车外壳中有不少曲面结构、棚格结构，这些零部件的原型如通过机械加工技术制造难度很大，而3D打印技术在驾驭复杂结构方面则显得游刃有余。</p><p>3D打印原型的另一类用途是功能性原型或高性能原型， 这些原型往往具有良好的耐热性、 耐蚀性或者是能够承受机械应力。 汽车制造商通过这类30打印零部件原型可以进行功能测试。 实现这类应用可用的3D打印技术和材料包括： 工业级熔融沉积成型3D打印设备和工程塑料丝材或者是纤维增强复合材料， 选区激光熔融3D打印设备和工程塑料粉末、 纤维增强复合粉末材料。</p><p>3D可以将设计师对于汽车设计的天马行空灵感快速的实现出来，对于设计师的工作效率有非常大且本质性的提升！</p><p>3D打印技术在汽车发动机制造中的应用主要包括以下几种：使用选区激光熔融技术直接制造复杂的发动机零件，使用选区激光烧结技术或黏结剂喷射技术制造汽车零件铸造用的砂型。黏结剂喷射金属3D打印技术，作为一种新型金屈打印工艺，在发动机组件、变速箱壳体等部件的快速成型制造领域具有一定潜力。</p><p>3D打印技术与夹具制造的结合点主 要有三个， 即：快速制造个性化或小批址的火具， 夹具设计的自由造型， 用轻扭化的塑料夹具替代金属夹具。</p><p>3D打印切入到电动汽车这个市场有两个明显的优势，一方面是传统汽车的产能基本已经固定了，很难去抛掉部分现有的设备来切换到3D打印技术领域。 电动汽车的产能投入是从全新的工厂开始的，3D 打印技术可发挥的空间就很大。 另一方面是针对电动汽车的零件生产，3D打印 可扩展的空间很大，例如生产结构、功能一体化零件，从而减少车辆中的零件数址 极大地压缩原来庞大的供应链，尤其是传统汽车制造领域复杂的供应商体系。</p><p>3D打印技术在汽车配件按需制造中的应用，有可能会使汽车零配件从目前的大批量集中制造的模式转变为根据客户的需求在本地工厂中进行按需生产的模式。宝马、奔驰、大众等汽车制造商在 3D 打印汽车配件、定制化汽车零件制造中的布局，以及1:1本大发汽车为客户提供的个性化汽车外饰件制造服务，都使 3D 打印技术主导的按需生产模式初露端倪。</p><h2 id="3-、模具"><a href="#3-、模具" class="headerlink" title="(3)、模具"></a>(3)、模具</h2><h3 id="lt-1-gt-、3D打印模具的“废”与“立”"><a href="#lt-1-gt-、3D打印模具的“废”与“立”" class="headerlink" title="<1>、3D打印模具的“废”与“立”"></a>&lt;1&gt;、3D打印模具的“废”与“立”</h3><h3 id="lt-2-gt-、注塑模具与随性冷却水路"><a href="#lt-2-gt-、注塑模具与随性冷却水路" class="headerlink" title="<2>、注塑模具与随性冷却水路"></a>&lt;2&gt;、注塑模具与随性冷却水路</h3><h3 id="lt-3-gt-、更多的随行冷却"><a href="#lt-3-gt-、更多的随行冷却" class="headerlink" title="<3>、更多的随行冷却"></a>&lt;3&gt;、更多的随行冷却</h3><h3 id="lt-4-gt-、轮胎制造的新思路"><a href="#lt-4-gt-、轮胎制造的新思路" class="headerlink" title="<4>、轮胎制造的新思路"></a>&lt;4&gt;、轮胎制造的新思路</h3><h3 id="lt-5-gt-、快速模具的“快”意"><a href="#lt-5-gt-、快速模具的“快”意" class="headerlink" title="<5>、快速模具的“快”意"></a>&lt;5&gt;、快速模具的“快”意</h3><h3 id="总结：-11"><a href="#总结：-11" class="headerlink" title="总结："></a>总结：</h3><p>金属3D打印技术为模具设计带来了更高的自由度，这使得模具设计师能够将复杂的功能整合在一个模具组件上，通过设计优化来提高模具性能，从而使通过模具制造的高功能性终端产品的制造速度更快、产品德缺陷更少。</p><p>30打印技术在金屈模具与塑料模具的制造中都有相应的应用。在金属模具 中较为典型的应用， 是将3D打印技术用于制造铸模， 比如说通过黏结剂喷射3D 打印技术制造金属铸造用的砂模 在注塑模具制造中典型的应用是制造模具中的随形冷却水路。</p><p>采用选区激光熔融3D打印技术来制造注塑模具中的冷却水路， 则可以摆 脱交叉钻孔制造方式的限制， 根据冷却要求， 设计出具有良好冷却效果的随形冷 却水路， 从而以一致的速度进行散热， 以促进散热的均匀性。</p><p>金屈30打印很好地解决了刀具下涉的问题， 当复杂性与可制造性不再是困扰轮胎模具制造的最大因素的时候， 30打印很好地释放了轮胎产品设计迭代的便捷性， 也催生了新型的轮胎制造能力。</p><p>3D打印技术与注塑模具制造结合最为紧密的应用是制造带有随形冷却水路的模具镶件，这种随形冷却模具被用于注塑件批益生产。 但有时企业所需的塑料零件数量非常少， 比如说企业在新产品研发阶段， 需要在短期内制造出少械新产品进行市场验证， 此时就会提出对小批批生产的需求。在这种情况下，如果使用用于注塑件批量生产的模具来制造小批量注塑件，会产生高昂的成本和较长的制造周期。但3D打印技术用一些树脂材料或特殊复合材料，直接制造小批戴快速生产需求的模具，则是条快速、经济的途径。</p><h2 id="4-、铸造"><a href="#4-、铸造" class="headerlink" title="(4)、铸造"></a>(4)、铸造</h2><h3 id="lt-1-gt-、砂型铸造"><a href="#lt-1-gt-、砂型铸造" class="headerlink" title="<1>、砂型铸造"></a>&lt;1&gt;、砂型铸造</h3><h3 id="lt-2-gt-、熔模铸造"><a href="#lt-2-gt-、熔模铸造" class="headerlink" title="<2>、熔模铸造"></a>&lt;2&gt;、熔模铸造</h3><h3 id="总结：-12"><a href="#总结：-12" class="headerlink" title="总结："></a>总结：</h3><p>3D打印技术及设备已应用到铸造行业，省去了模具制造环节， 大大缩短了铸件交付周期。3D打印技术在铸造业中的应用， 主要涉及与砂型铸造、 熔模铸造这两种铸造工艺的结合。 </p><p>虽然我国铸造行业尚未完成数字化、智能化的转型升级，但部分铸造企业在 这方面已经走在了前列。</p><h2 id="5-、液压"><a href="#5-、液压" class="headerlink" title="(5)、液压"></a>(5)、液压</h2><h3 id="lt-1-gt-、液压市场不平凡"><a href="#lt-1-gt-、液压市场不平凡" class="headerlink" title="<1>、液压市场不平凡"></a>&lt;1&gt;、液压市场不平凡</h3><h3 id="lt-2-gt-、液压歧管的”瘦身“故事"><a href="#lt-2-gt-、液压歧管的”瘦身“故事" class="headerlink" title="<2>、液压歧管的”瘦身“故事"></a>&lt;2&gt;、液压歧管的”瘦身“故事</h3><h3 id="lt-3-gt-、机械中不寻常的液压系统"><a href="#lt-3-gt-、机械中不寻常的液压系统" class="headerlink" title="<3>、机械中不寻常的液压系统"></a>&lt;3&gt;、机械中不寻常的液压系统</h3><h3 id="lt-4-gt-、“复杂性”驱动液压增材制造"><a href="#lt-4-gt-、“复杂性”驱动液压增材制造" class="headerlink" title="<4>、“复杂性”驱动液压增材制造"></a>&lt;4&gt;、“复杂性”驱动液压增材制造</h3><h3 id="lt-5-gt-、液压制造商发力3D打印"><a href="#lt-5-gt-、液压制造商发力3D打印" class="headerlink" title="<5>、液压制造商发力3D打印"></a>&lt;5&gt;、液压制造商发力3D打印</h3><h3 id="总结：-13"><a href="#总结：-13" class="headerlink" title="总结："></a>总结：</h3><p>在3D科学谷看来，液压、散热器、叶片、随形冷却模具，这是几大正在与金属3D打印技术进行深度结合的应用。 因为这些产品都有着特殊的内部结构，传统的加工方式需要牺牲掉产品的性能来满足加工要求，要达到最佳的产品性能，优化的结构通过传统方式是很难实现的。</p><p>传统制造工艺固有的局限性会导致相邻流动通道之间形成突兀的拐角， 造成液体流动不畅或停滞， 这是效率损失的一个重要原因。 从流体力学的角度来看， 传统方式加工的液压歧管在设计上存在许多有待改进的空间， 这正是3D打印技术可以发挥作用之处。</p><p>基于3D打印技术重新设计液压歧管价值体现在两个方面，一方面是重屈得到减轻，使用的制造材料相应减少另一方面是提高设计自由度， 优化内部流体通道的设计，减少流体效率的损失增材制造的液压歧管可应用在农业机械、赛乍、航空、帆船等多种机械设备的液压阀体中。通过下面的案例，我们可以感知粉末床选区金属熔融技术在液压控制系统领域的产业化趋势。</p><h2 id="6-、工业其他"><a href="#6-、工业其他" class="headerlink" title="(6)、工业其他"></a>(6)、工业其他</h2><h3 id="lt-1-gt-、燃气轮机制造"><a href="#lt-1-gt-、燃气轮机制造" class="headerlink" title="<1>、燃气轮机制造"></a>&lt;1&gt;、燃气轮机制造</h3><h3 id="lt-2-gt-、核工业"><a href="#lt-2-gt-、核工业" class="headerlink" title="<2>、核工业"></a>&lt;2&gt;、核工业</h3><h3 id="lt-3-gt-、刀具"><a href="#lt-3-gt-、刀具" class="headerlink" title="<3>、刀具"></a>&lt;3&gt;、刀具</h3><h3 id="lt-4-gt-、后市场"><a href="#lt-4-gt-、后市场" class="headerlink" title="<4>、后市场"></a>&lt;4&gt;、后市场</h3><h3 id="lt-5-gt-、再制造"><a href="#lt-5-gt-、再制造" class="headerlink" title="<5>、再制造"></a>&lt;5&gt;、再制造</h3><h3 id="总结：-14"><a href="#总结：-14" class="headerlink" title="总结："></a>总结：</h3><p>3D打印无论在工业的任何一方面都在以一种全新的方式，一种区别以传统制造业的方式改变了工业制造大的某一环节，并且还会持续产生更大的价值！</p><h2 id="7-、医疗"><a href="#7-、医疗" class="headerlink" title="(7)、医疗"></a>(7)、医疗</h2><h3 id="lt-1-gt-、手术预规划"><a href="#lt-1-gt-、手术预规划" class="headerlink" title="<1>、手术预规划"></a>&lt;1&gt;、手术预规划</h3><h3 id="lt-2-gt-、植入物"><a href="#lt-2-gt-、植入物" class="headerlink" title="<2>、植入物"></a>&lt;2&gt;、植入物</h3><h3 id="lt-3-gt-、牙科"><a href="#lt-3-gt-、牙科" class="headerlink" title="<3>、牙科"></a>&lt;3&gt;、牙科</h3><h3 id="lt-4-gt-、康复医疗器械"><a href="#lt-4-gt-、康复医疗器械" class="headerlink" title="<4>、康复医疗器械"></a>&lt;4&gt;、康复医疗器械</h3><h3 id="lt-5-gt-、芯片上的实验室"><a href="#lt-5-gt-、芯片上的实验室" class="headerlink" title="<5>、芯片上的实验室"></a>&lt;5&gt;、芯片上的实验室</h3><h3 id="总结：-15"><a href="#总结：-15" class="headerlink" title="总结："></a>总结：</h3><p>3D 打印技术在医疗领域的主要应用价值体现在更好地为患者进行个体化治疗，以高效、精准的数字化设计与制造手段制造定制化的医疗器械毋咐置疑，3D打印在医疗领域极具发展潜力。</p><p>目前从事科学研究和市场研究的机构普遍认为，3D打印技术在医疗行业应用发展趋势是从制造植入物、手术、药品等不具有生物活性的医疗器械发展到制造带有生物活性的人造器官。</p><p>D打印医疗模型能够形象地将病人解剖结构呈现给医生， 医生在做手术之 前可以根据模型规划手术方案，或者使用一些与人体组织 “ 手感” 相似的柔性 30打印模型进行手术演练。3D打印医疗模型还可以在医患沟通方面提供许多帮助、 其中之一就是医生可以用来告诉患者究竟是哪个部位出问题了骨科、心脏、神经外科、 肿瘤科等越来越多的医学学科已经利用30打印医疗模型进行手术预规划， 一定程度上帮助医生提高复杂手术的成功率、降低手术风险。 难度越高的手术， 通过3D打印模型进行手术预规划的价值越高。</p><p>目前的3D打印医疗模型制造技术仍具有可提升的空间，主要包括两个方面，一方面是三维建模技术的提升，另一方面是医疗校型建模、3D打印过程与现有医疗诊断流程的整合。</p><p>3D打印医疗模型是通过软件对CT、核磁共振等设备产生的医学影像进行三维建模， 并将建模文件传输给30打印设备进行打印而产生的。核磁共振和CT扫描等医学成像技术可以产生一系列高分辨率的平面化的位图图像， 通过这些图像可以获得如何来建立三维建模的信息。</p><p>3D打印植入物是3D打印技术在医疗行业中市场规模最大的应用。</p><p>牙科产品加工领域是3D打印技术短期和长期发展的重要推动力屈， 牙科产品对小批量定制化的需求， 为3D打印技术提供了良好的应用基础。</p><h2 id="8-、电子"><a href="#8-、电子" class="headerlink" title="(8)、电子"></a>(8)、电子</h2><h3 id="lt-1-gt-、印刷电子与硅基微电子"><a href="#lt-1-gt-、印刷电子与硅基微电子" class="headerlink" title="<1>、印刷电子与硅基微电子"></a>&lt;1&gt;、印刷电子与硅基微电子</h3><h3 id="lt-2-gt-、PCB快速原型"><a href="#lt-2-gt-、PCB快速原型" class="headerlink" title="<2>、PCB快速原型"></a>&lt;2&gt;、PCB快速原型</h3><h3 id="lt-3-gt-、小批量制造"><a href="#lt-3-gt-、小批量制造" class="headerlink" title="<3>、小批量制造"></a>&lt;3&gt;、小批量制造</h3><h3 id="lt-4-gt-、几种有生产潜力的应用"><a href="#lt-4-gt-、几种有生产潜力的应用" class="headerlink" title="<4>、几种有生产潜力的应用"></a>&lt;4&gt;、几种有生产潜力的应用</h3><h3 id="lt-5-gt-、3D打印与物联网"><a href="#lt-5-gt-、3D打印与物联网" class="headerlink" title="<5>、3D打印与物联网"></a>&lt;5&gt;、3D打印与物联网</h3><h3 id="总结：-16"><a href="#总结：-16" class="headerlink" title="总结："></a>总结：</h3><p>3D打印技术在电子行业的运用远远不止于“表面”的阶段，还包括在电子的底层上进行运用。</p><p>3D打印技术在电子行业中的应用尚处于早期阶段，目前主要是用于电子产 品的快速原型， 例如PCB快速原型制造喷墨3D打印。然而也有少数的应用已经超越原型制造，走向了电子产品批股生产， 如共形天线。</p><p>现阶段，3D打印技术在电子产品制造领域最主要的应用就是新产品的快速原型制造。不仅是电子产品的外壳可以通过3D打印技术进行快速制造，电子产品中所衙的PCB也可以通过3D打印进行快速制造。</p><p>柔性电子制造技术在未来的技术创新中将发挥祖要作用， 而用于监测、分析人体健康或运动情况的可穿戴设备是柔性电子应用的高地。 混合3D打印（或称为多材料3D打印）在柔性可穿戴设备的制造中具有一定市场潜力。</p><p>物联网和3D打印的结合是双向的： 一个方向是通过3D打印技术在零件或 产品制造的过程中将传感器嵌入 ，作为一种制造技术手段与物联网发生直接联系；另一个方向是物联网所积聚的大数据反馈给3D打印的制造系统，以实现更精益的生产及供应链管理和更加适合用户需求的产品设计。</p><p>3D打印技术正变得越来越受欢迎，在航空航天、汽车、电子和医疗行业发挥越来越重要的作用，而物联网在这些行业中均可以发挥重要的作用。应用物联网技术之后，机械中的各项监测结果将连接到网络中，成为大数据的一部分，对这些数据进行分析后，则能够实现高效的质批控制。不仅如此，物联网还通过不断增长的传感器收集每一个可能的数据，分析与人类有关的行为和互动，并允许企业收集人们的产品行为信息，用来了解和预测未来的行为。同样的技术还可以用千特定的用途，如分析温度和结构的完整性，有助于提高产品的产量和质报。总之，以3D打印为代表的数字化制造与大数据这两种革命性的技术，将为许多行业提供一种工具，可以彻底改变监控过程的方式，分析和改进产品质量。毕马威曾预测物联网和3D打印将成为位居改变人们生活和工作方式的前三名技术，而到2020年，活跃的无线连接设备数量将超过409亿部，这为二者的结合提供了空间。</p><h2 id="9-、首饰"><a href="#9-、首饰" class="headerlink" title="(9)、首饰"></a>(9)、首饰</h2><h3 id="lt-1-gt-、首饰的两种“打印”方式"><a href="#lt-1-gt-、首饰的两种“打印”方式" class="headerlink" title="<1>、首饰的两种“打印”方式"></a>&lt;1&gt;、首饰的两种“打印”方式</h3><h3 id="lt-2-gt-、互联网-首饰定制"><a href="#lt-2-gt-、互联网-首饰定制" class="headerlink" title="<2>、互联网+首饰定制"></a>&lt;2&gt;、互联网+首饰定制</h3><h3 id="总结：-17"><a href="#总结：-17" class="headerlink" title="总结："></a>总结：</h3><p>3D打印无论是直接还是间接用于首饰制造，都将简化当前首饰制作的流程，并推动行业发展向定制化、更复杂或者独特的设计、数字化制造的方向发展。</p><p>3D打印将改变首饰行业，未来将出现数字化的首饰平台，消费者除了购买首饰，还能参与首饰的设计，首饰在设计方案确定之后才能进行生产。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
          <category> 3D打印 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 3D打印 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java包管理模式总结归纳——Java小抄(8)</title>
      <link href="2020/12/24/Java-Supplement-8/"/>
      <url>2020/12/24/Java-Supplement-8/</url>
      
        <content type="html"><![CDATA[<h1 id="【Java包管理模式总结归纳——Java小抄-8-】"><a href="#【Java包管理模式总结归纳——Java小抄-8-】" class="headerlink" title="【Java包管理模式总结归纳——Java小抄(8)】"></a>【Java包管理模式总结归纳——Java小抄(8)】</h1><blockquote><p>原创内容，转载请注明出处！</p></blockquote><h1 id="一、包"><a href="#一、包" class="headerlink" title="一、包"></a>一、包</h1><h2 id="1、包的概述"><a href="#1、包的概述" class="headerlink" title="1、包的概述"></a>1、包的概述</h2><ul><li>其实就是文件夹</li><li>作用：对类进行分类管理</li><li>包的划分：<ul><li>举例：<ul><li>学生的增加，删除，修改，查询</li><li>老师的增加，删除，修改，查询</li><li>以及以后可能出现的其他的类的增加，删除，修改，查询</li><li>基本的划分“按照模块和功能划分”</li></ul></li></ul></li></ul><h1 id="二、包的定义及注意事项"><a href="#二、包的定义及注意事项" class="headerlink" title="二、包的定义及注意事项"></a>二、包的定义及注意事项</h1><h2 id="1、定义包的格式"><a href="#1、定义包的格式" class="headerlink" title="1、定义包的格式"></a>1、定义包的格式</h2><ul><li><p>package 包名;</p><ul><li>多级包用 . 分开即可</li><li>package cn.cxtc.jk03</li><li>原则：域名反写</li></ul></li><li><p>注意事项：</p><ul><li>package语句必须是程序的第一条可执行的代码(import放在package后)</li><li>package语句在一个java文件中只能有一个</li><li>如果没有package，默认表示无包名</li></ul></li></ul><h1 id="三、带包的类的编译和运行"><a href="#三、带包的类的编译和运行" class="headerlink" title="三、带包的类的编译和运行"></a>三、带包的类的编译和运行</h1><h2 id="1、手动式"><a href="#1、手动式" class="headerlink" title="1、手动式"></a>1、手动式</h2><ul><li><p>a：java编译当前类文件</p></li><li><p>b：手动建立包对应的文件夹</p></li><li><p>c：把a步骤的class文件放到步骤的最终文件夹下</p></li><li><p>d：通过java命令执行，注意：需要带包名称的执行</p><ul><li>java cn.cxtc.jk03.HelloWorld</li></ul></li></ul><h2 id="2、自动式"><a href="#2、自动式" class="headerlink" title="2、自动式"></a>2、自动式</h2><ul><li><p>a：javac编译的时候带上 -d 即可</p><ul><li>javac -d . HelloWorld.java</li></ul></li><li><p>b：通过java命令执行，和手动式一样</p></li></ul><h2 id="3、说明"><a href="#3、说明" class="headerlink" title="3、说明"></a>3、说明</h2><ul><li>1、对于 .java 文件中没有package语句时：<ul><li>编译：.java文件所在路径下：javac Xx.java（生成 Xx.class 文件）</li><li>运行：.class文件所在路径下：java Xx</li></ul></li><li>2、对于 .java 文件中有package语句，但是 .java 文件不在包结构中时：<ul><li>编译：.java文件所在路径下：javac Xx.java（能够成功编译，并成功生成 Xx.class 文件）</li><li>运行：.class文件所在路径下：java Xx（运行报错！错误: 找不到或无法加载主类 Xx）</li></ul></li><li>3、对于 .java 文件中有package语句，但是 .java 文件不在包结构中时：<ul><li>编译：.java文件所在路径下：javac Xx.java（能够成功编译，并成功生成 .class 文件）</li><li>移动：将 Xx.class 文件放到对应的包结构目录下</li><li>运行：.java文件所在路径下：java Xx（运行报错！错误: 找不到或无法加载主类 Xx）</li><li>再次运行：.java文件所在路径下：java cn.cxtc.jk03.Xx（运行成功！）</li><li>运行：.class文件所在路径下：java Xx（运行成功！）</li></ul></li><li>4、对于 .java 文件中有package语句，但是 .java 文件不在包结构中时：<ul><li>编译：.java文件所在路径下：javac -d . Xx.java（能够成功编译，并成功生成 .class 文件）</li><li>自动构建包结构：当上一步完成后，编译器会自动根据package语句中的包结构路径创建文件夹结构（已有时便直接用）并将生成的 .class 文件放入指定位置</li><li>运行：.java文件所在路径下：java Xx（运行报错！错误: 找不到或无法加载主类 Xx）</li><li>再次运行：.java文件所在路径下：java cn.cxtc.jk03.Xx（运行成功！）</li><li>运行：.class文件所在路径下：java Xx（运行成功！）</li></ul></li></ul><h1 id="四、类之间的访问"><a href="#四、类之间的访问" class="headerlink" title="四、类之间的访问"></a>四、类之间的访问</h1><h2 id="1、定义两个类：Method-Test"><a href="#1、定义两个类：Method-Test" class="headerlink" title="1、定义两个类：Method, Test"></a>1、定义两个类：Method, Test</h2><ul><li>Method<ul><li>求和方法(sum)</li></ul></li><li>Test<ul><li>测试方法(main)</li></ul></li></ul><h2 id="2、测试两个类不同位置的访问方式"><a href="#2、测试两个类不同位置的访问方式" class="headerlink" title="2、测试两个类不同位置的访问方式"></a>2、测试两个类不同位置的访问方式</h2><ul><li>无包时的访问</li><li>同一个包内的访问<ul><li>不用导包</li></ul></li><li>不同包间的访问<ul><li>必须指明包（或：导入包）</li></ul></li></ul><h1 id="五、导包"><a href="#五、导包" class="headerlink" title="五、导包"></a>五、导包</h1><h2 id="1、导包概述"><a href="#1、导包概述" class="headerlink" title="1、导包概述"></a>1、导包概述</h2><ul><li>不同包下的类之间的访问，我们发现，每次使用不同包下的类的时候，都需要加包的全路径（eg: java.util.Scanner sc = new java.util.Scanner(System.in);    cn.cxtc.jk03.Jerry zjr = new cn.cxtc.jk03.Jerry(); ），比较麻烦，这个时候java就提供了导包的功能。</li></ul><h2 id="2、导包格式"><a href="#2、导包格式" class="headerlink" title="2、导包格式"></a>2、导包格式</h2><ul><li>import 包名;</li><li>注意：<ul><li>这种方式导入是到类的名称（单类型导入：import cn.cxtc.jk03.Jerry;）</li><li>虽然可以最后写 * ，但是不建议（按需导入：import cn.cxtc.jk03.*;     // 不允许出现多个*）   </li></ul></li><li>package, import, class有没有顺序关系?<ul><li>package——&gt;import——&gt;class</li></ul></li><li>补充说明：<ul><li>package只能出现一次</li><li>import可以出现多次</li><li>一个.java文件中可以放多个class，但是实际开发中只建议一个.java文件内放一个class</li></ul></li></ul><h1 id="六、权限修饰符"><a href="#六、权限修饰符" class="headerlink" title="六、权限修饰符"></a>六、权限修饰符</h1><table><thead><tr><th align="center"></th><th align="center">public</th><th align="center">protected</th><th align="center">缺省</th><th align="center">private</th></tr></thead><tbody><tr><td align="center">同一类中</td><td align="center">Y</td><td align="center">Y</td><td align="center">Y</td><td align="center">Y</td></tr><tr><td align="center">同一包子类，其他类</td><td align="center">Y</td><td align="center">Y</td><td align="center">Y</td><td align="center"></td></tr><tr><td align="center">不同包子类</td><td align="center">Y</td><td align="center">Y</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">不同包其他类</td><td align="center">Y</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="附：class修饰符实例"><a href="#附：class修饰符实例" class="headerlink" title="附：class修饰符实例"></a>附：class修饰符实例</h2><ul><li>四种访问控制修饰符中，对于外部类只可以使用：public 或 默认</li><li>public class：所有地方都可以使用该类</li><li>class：只有同一包中才能使用该类</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201231105814328.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201231105814314.png"></p><h1 id="七、补充"><a href="#七、补充" class="headerlink" title="七、补充"></a>七、补充</h1><h2 id="1、类及其组成可以用的修饰符"><a href="#1、类及其组成可以用的修饰符" class="headerlink" title="1、类及其组成可以用的修饰符"></a>1、类及其组成可以用的修饰符</h2><ul><li>修饰符：</li><li>权限修饰符：private，缺省，protected，public</li><li>状态修饰符：static，final</li><li>抽象修饰符：abstract</li></ul><h2 id="2、类及其组成可以用的修饰符"><a href="#2、类及其组成可以用的修饰符" class="headerlink" title="2、类及其组成可以用的修饰符"></a>2、类及其组成可以用的修饰符</h2><ul><li>类：<ul><li>默认，public，final，abstract</li><li>我们自己定义：public居多</li></ul></li><li>成员变量：<ul><li>四种权限修饰符均可,final,static</li><li>我们自己定义：private居多</li></ul></li><li>构造方法：<ul><li>四种权限修饰符均可,其他不可</li><li>我们自己定义：public 居多</li></ul></li><li>成员方法：<ul><li>四种权限修饰符均可，final,static,abstract</li><li>我们自己定义：public居多</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java接口机制案例详解——Java小抄(7)</title>
      <link href="2020/12/24/Java-Supplement-7/"/>
      <url>2020/12/24/Java-Supplement-7/</url>
      
        <content type="html"><![CDATA[<h1 id="【Java接口机制案例详解——Java小抄-7-】"><a href="#【Java接口机制案例详解——Java小抄-7-】" class="headerlink" title="【Java接口机制案例详解——Java小抄(7)】"></a>【Java接口机制案例详解——Java小抄(7)】</h1><blockquote><p>原创内容，转载请注明出处！</p></blockquote><h1 id="一、接口概述"><a href="#一、接口概述" class="headerlink" title="一、接口概述"></a>一、接口概述</h1><h2 id="1、接口概述"><a href="#1、接口概述" class="headerlink" title="1、接口概述"></a>1、接口概述</h2><ul><li>猫狗案例中，如果有狗看门，猫钻火圈等额外的动作，并不是所有猫或者狗一开始就具备的，这应该属于经过特殊的培训训练出来的，这些额外的动作定义到动物类中就不合适，也不适合直接定义到猫或者狗中，因为只有部分猫狗具备这些功能。所以，为了体现事物功能的扩展性，Java中就提供了接口来定义这些额外功能，并不给出具体实现，将来哪些猫狗需要被培训，只需要这部分猫狗把这些额外功能实现即可。</li></ul><h1 id="二、接口特点"><a href="#二、接口特点" class="headerlink" title="二、接口特点"></a>二、接口特点</h1><h2 id="1、接口特点"><a href="#1、接口特点" class="headerlink" title="1、接口特点"></a>1、接口特点</h2><ul><li><p>接口用关键字interface表示</p><ul><li>格式：interface 接口名 {}</li></ul></li><li><p>类实现接口用implements表示</p><ul><li>格式：class 类名 implements 接口名 {}</li></ul></li><li><p>接口不能实例化</p><ul><li><p>那么，接口如何实例化呢?</p></li><li><p>按照多态的方式，由具体的子类实例化。其实这也是多态的一种，接口多态。</p></li></ul></li><li><p>接口的子类</p><ul><li><p>要么是抽象类</p></li><li><p>要么重写接口中的所有抽象方法</p></li></ul></li></ul><h1 id="三、接口成员特点"><a href="#三、接口成员特点" class="headerlink" title="三、接口成员特点"></a>三、接口成员特点</h1><h2 id="1、成员变量"><a href="#1、成员变量" class="headerlink" title="1、成员变量"></a>1、成员变量</h2><ul><li>只能是常量</li><li>默认修饰符 public static final（注意：可以省略，但推荐还是写上！）</li></ul><h2 id="2、构造方法"><a href="#2、构造方法" class="headerlink" title="2、构造方法"></a>2、构造方法</h2><ul><li>没有，因为接口主要是扩展功能的，而没有具体存在</li></ul><h2 id="3、成员方法"><a href="#3、成员方法" class="headerlink" title="3、成员方法"></a>3、成员方法</h2><ul><li>只能是抽象方法</li><li>默认修饰符 public abstract（注意：可以省略，但推荐还是写上！）</li></ul><h1 id="四、类与类-类与接口以及接口与接口的关系"><a href="#四、类与类-类与接口以及接口与接口的关系" class="headerlink" title="四、类与类,类与接口以及接口与接口的关系"></a>四、类与类,类与接口以及接口与接口的关系</h1><h2 id="1、类与类"><a href="#1、类与类" class="headerlink" title="1、类与类"></a>1、类与类</h2><ul><li><p>继承关系，只能单继承，但是可以多层继承</p><h2 id="2、类与接口"><a href="#2、类与接口" class="headerlink" title="2、类与接口"></a>2、类与接口</h2></li><li><p>实现关系，可以单实现，也可以多实现。还可以在继承一个类的同时实现多个接口</p><h2 id="3、接口与接口"><a href="#3、接口与接口" class="headerlink" title="3、接口与接口"></a>3、接口与接口</h2></li><li><p>继承关系，可以单继承，也可以多继承</p></li></ul><h1 id="五、抽象类和接口的区别"><a href="#五、抽象类和接口的区别" class="headerlink" title="五、抽象类和接口的区别"></a>五、抽象类和接口的区别</h1><h2 id="1、成员区别"><a href="#1、成员区别" class="headerlink" title="1、成员区别"></a>1、成员区别</h2><ul><li>抽象类 变量,常量;有抽象方法;抽象方法,非抽象方法</li><li>接口 常量;抽象方法</li></ul><h2 id="2、关系区别"><a href="#2、关系区别" class="headerlink" title="2、关系区别"></a>2、关系区别</h2><ul><li>类与类 继承，单继承</li><li>类与接口 实现，单实现，多实现</li><li>接口与接口 继承，单继承，多继承</li></ul><h2 id="3、设计理念区别"><a href="#3、设计理念区别" class="headerlink" title="3、设计理念区别"></a>3、设计理念区别</h2><ul><li>抽象类 被继承体现的是：”is a”的关系。共性功能</li><li>接口 被实现体现的是：”like a”的关系(能不能，具不具有)。扩展功能</li></ul><h1 id="六、接口练习"><a href="#六、接口练习" class="headerlink" title="六、接口练习"></a>六、接口练习</h1><h2 id="1、猫狗案例-加入跳高的额外功能"><a href="#1、猫狗案例-加入跳高的额外功能" class="headerlink" title="1、猫狗案例,加入跳高的额外功能"></a>1、猫狗案例,加入跳高的额外功能</h2><h2 id="2、老师和学生案例-加入抽烟的额外功能"><a href="#2、老师和学生案例-加入抽烟的额外功能" class="headerlink" title="2、老师和学生案例,加入抽烟的额外功能"></a>2、老师和学生案例,加入抽烟的额外功能</h2><h2 id="3、教练和运动员案例"><a href="#3、教练和运动员案例" class="headerlink" title="3、教练和运动员案例"></a>3、教练和运动员案例</h2><ul><li>乒乓球运动员和篮球运动员。</li><li>乒乓球教练和篮球教练。</li><li>为了出国交流，跟乒乓球相关的人员都需要学习英语。</li><li>请用所学知识：</li><li>分析，这个案例中有哪些抽象类，哪些接口，哪些具体类。</li></ul><h1 id="七、接口思想"><a href="#七、接口思想" class="headerlink" title="七、接口思想"></a>七、接口思想</h1><h2 id="1、实现软件模块间的连接方面有着巨大优势。"><a href="#1、实现软件模块间的连接方面有着巨大优势。" class="headerlink" title="1、实现软件模块间的连接方面有着巨大优势。"></a>1、实现软件模块间的连接方面有着巨大优势。</h2><h2 id="2、调用者和被调用者只需要各自遵循接口标准，而无需各自了解对方具体的实现过程，更好的实现扩展性和低耦合性。"><a href="#2、调用者和被调用者只需要各自遵循接口标准，而无需各自了解对方具体的实现过程，更好的实现扩展性和低耦合性。" class="headerlink" title="2、调用者和被调用者只需要各自遵循接口标准，而无需各自了解对方具体的实现过程，更好的实现扩展性和低耦合性。"></a>2、调用者和被调用者只需要各自遵循接口标准，而无需各自了解对方具体的实现过程，更好的实现扩展性和低耦合性。</h2><h2 id="3、USB接口案例"><a href="#3、USB接口案例" class="headerlink" title="3、USB接口案例"></a>3、USB接口案例</h2><ul><li>主板，各类USB设备（U盘，手机，移动硬盘）</li></ul><p>低配版本：<strong>UsbTest.java</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jerry.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">USB接口案例(版本1)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个USB接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">USB</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> voltage = <span class="number">5.0</span>; <span class="comment">// 电压</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> current = <span class="number">0.5</span>; <span class="comment">// 电流</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>; <span class="comment">// 启动</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>; <span class="comment">// 运行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>;    <span class="comment">// 关闭</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标实现USB接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mouse</span> <span class="keyword">implements</span> <span class="title">USB</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"鼠标启动"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"鼠标运行"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"鼠标关闭"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 键盘实现USB接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Keyboard</span> <span class="keyword">implements</span> <span class="title">USB</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"键盘启动"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"键盘运行"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"键盘关闭"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 摄像头实现USB接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Camera</span> <span class="keyword">implements</span> <span class="title">USB</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"摄像头启动"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"摄像头运行"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"摄像头关闭"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手机实现USB接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Phone</span> <span class="keyword">implements</span> <span class="title">USB</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"手机启动"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"手机运行"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"手机关闭"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主板类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mainboard</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">useUSB</span><span class="params">(USB u)</span> </span>{    <span class="comment">// 接口多态</span></span><br><span class="line">        u.start();</span><br><span class="line">        u.run();</span><br><span class="line">        u.stop();</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsbTest</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Mainboard mb = <span class="keyword">new</span> Mainboard();</span><br><span class="line">        Mouse m = <span class="keyword">new</span> Mouse();</span><br><span class="line">        Keyboard kb = <span class="keyword">new</span> Keyboard();</span><br><span class="line">        Camera c = <span class="keyword">new</span> Camera();</span><br><span class="line">        Phone p = <span class="keyword">new</span> Phone();</span><br><span class="line"></span><br><span class="line">        mb.useUSB(m);  <span class="comment">// 接口多态</span></span><br><span class="line">        mb.useUSB(kb);  <span class="comment">// 接口多态</span></span><br><span class="line">        mb.useUSB(c);  <span class="comment">// 接口多态</span></span><br><span class="line">        mb.useUSB(p);  <span class="comment">// 接口多态</span></span><br><span class="line">        System.out.println(<span class="string">"USB设备的电压是："</span> + USB.voltage);</span><br><span class="line">        System.out.println(<span class="string">"USB设备的电流是："</span> + USB.current);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>编译运行结果：</strong></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">鼠标启动</span><br><span class="line">鼠标运行</span><br><span class="line">鼠标关闭</span><br><span class="line">键盘启动</span><br><span class="line">键盘运行</span><br><span class="line">键盘关闭</span><br><span class="line">摄像头启动</span><br><span class="line">摄像头运行</span><br><span class="line">摄像头关闭</span><br><span class="line">手机启动</span><br><span class="line">手机运行</span><br><span class="line">手机关闭</span><br><span class="line">USB设备的电压是：5.0</span><br><span class="line">USB设备的电流是：0.5</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></tbody></table></figure><p>高配版本：<strong>UsbTestPro.java</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jerry.java;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">USB接口案例(版本2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个USB接口</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">USB</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> voltage = <span class="number">5.0</span>; <span class="comment">// 电压</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <sp